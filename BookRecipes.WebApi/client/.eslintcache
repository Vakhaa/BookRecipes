[{"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\index.js":"1","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\reportWebVitals.js":"2","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\App.js":"3","D:\\dev\\BookRecipes\\bookrecipes.webapi\\client\\src\\index.js":"4","D:\\dev\\BookRecipes\\bookrecipes.webapi\\client\\src\\components\\App.js":"5","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Footer\\Footer.js":"6","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Header\\Header.js":"7","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\IngredientsContainer.js":"8","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Ingredients\\Ingredients.js":"9","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Ingredients\\Ingredient.js":"10","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\SideBar\\SideBar.js":"11","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\RecipeContainer.js":"12","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Recipes\\Recipe.js":"13","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\RecipesContainer.js":"14","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Recipes\\Recipes.js":"15","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\SideBarContainer.js":"16","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\ProfileContainer.js":"17","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Profile\\Profile.js":"18","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\common\\Login.js":"19","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\DAL\\api.js":"20","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\ingredientAction.js":"21","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\ingredientsAction.js":"22","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\actionTypes.js":"23","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\profileAction.js":"24","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\store\\index.js":"25","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\index.js":"26","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\ingredientReducer.js":"27","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\ingredientsReducer.js":"28","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\profileReducer.js":"29","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\MessagesContainer.js":"30","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\Messages.js":"31","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\messagesReducer.js":"32","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\messagesAction.js":"33","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\SideBar\\SideBar.js":"34","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\Chat\\Chat.js":"35","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\Chat\\ChatDisplayer\\ChatDisplayer.js":"36","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\Chat\\Header\\Header.js":"37","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\Chat\\MessageCreator\\MessageCreator.js":"38","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\Notes\\Notes.js":"39","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\SideBar\\Friends\\Friends.js":"40","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\postsReducer.js":"41","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\postsAction.js":"42","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\profilesMock.js":"43","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\friendsAction.js":"44","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\friendsReducer.js":"45","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\informatorReducer.js":"46","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\FriendsContainer.js":"47","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Friends\\Friends.js":"48","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\hoc\\withAuthUser.js":"49","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\hoc\\withFriends.js":"50","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\utiles\\ReduxMUIForms\\InputReduxMUI.js":"51","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\utiles\\ReduxMUIForms\\CheckboxReduxMUI.js":"52","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\Chat\\MessageCreator\\MessageForm\\MessageForm.js":"53","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Profile\\PostsWall\\PostsWall.js":"54","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Profile\\PostsWall\\Posts\\Posts.js":"55","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Profile\\PostsWall\\PostForm\\PostForm.js":"56","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Profile\\Friends\\Friends.js":"57","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\ChatContainer.js":"58","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\loginReducer.js":"59","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\LoginContainer.js":"60","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\loginAction.js":"61","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\utiles\\vaildators\\validators.js":"62","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\utiles\\selectors\\selectors.js":"63"},{"size":688,"mtime":1613770363938,"results":"64","hashOfConfig":"65"},{"size":362,"mtime":499162500000,"results":"66","hashOfConfig":"65"},{"size":2319,"mtime":1614153081749,"results":"67","hashOfConfig":"65"},{"size":484,"mtime":1610879481612,"results":"68","hashOfConfig":"69"},{"size":387,"mtime":1610829940396,"results":"70","hashOfConfig":"69"},{"size":1506,"mtime":1613666816211,"results":"71","hashOfConfig":"65"},{"size":1314,"mtime":1614087288167,"results":"72","hashOfConfig":"65"},{"size":1926,"mtime":1614163394753,"results":"73","hashOfConfig":"65"},{"size":1265,"mtime":1613669985020,"results":"74","hashOfConfig":"65"},{"size":1908,"mtime":1613669933942,"results":"75","hashOfConfig":"65"},{"size":1231,"mtime":1614083171050,"results":"76","hashOfConfig":"65"},{"size":1499,"mtime":1613938017664,"results":"77","hashOfConfig":"65"},{"size":2452,"mtime":1613670121512,"results":"78","hashOfConfig":"65"},{"size":867,"mtime":1614163998423,"results":"79","hashOfConfig":"65"},{"size":695,"mtime":1614083128601,"results":"80","hashOfConfig":"65"},{"size":972,"mtime":1614164055487,"results":"81","hashOfConfig":"65"},{"size":1726,"mtime":1614164168145,"results":"82","hashOfConfig":"65"},{"size":4962,"mtime":1614173553177,"results":"83","hashOfConfig":"65"},{"size":2514,"mtime":1614104963680,"results":"84","hashOfConfig":"65"},{"size":1708,"mtime":1613817086659,"results":"85","hashOfConfig":"65"},{"size":913,"mtime":1611444873492,"results":"86","hashOfConfig":"65"},{"size":859,"mtime":1613814570019,"results":"87","hashOfConfig":"65"},{"size":2267,"mtime":1614087590343,"results":"88","hashOfConfig":"65"},{"size":1033,"mtime":1613913057105,"results":"89","hashOfConfig":"65"},{"size":741,"mtime":1613905241258,"results":"90","hashOfConfig":"65"},{"size":842,"mtime":1614086452830,"results":"91","hashOfConfig":"65"},{"size":925,"mtime":1613670352216,"results":"92","hashOfConfig":"65"},{"size":997,"mtime":1613670375434,"results":"93","hashOfConfig":"65"},{"size":1640,"mtime":1614090660777,"results":"94","hashOfConfig":"65"},{"size":1451,"mtime":1614163469793,"results":"95","hashOfConfig":"65"},{"size":1364,"mtime":1614087205492,"results":"96","hashOfConfig":"65"},{"size":5997,"mtime":1614081711625,"results":"97","hashOfConfig":"65"},{"size":1159,"mtime":1614077383142,"results":"98","hashOfConfig":"65"},{"size":2408,"mtime":1614082889721,"results":"99","hashOfConfig":"65"},{"size":1420,"mtime":1614082354995,"results":"100","hashOfConfig":"65"},{"size":1213,"mtime":1614082459782,"results":"101","hashOfConfig":"65"},{"size":1436,"mtime":1614082399881,"results":"102","hashOfConfig":"65"},{"size":717,"mtime":1614037714115,"results":"103","hashOfConfig":"65"},{"size":629,"mtime":1614082858011,"results":"104","hashOfConfig":"65"},{"size":2428,"mtime":1614082865824,"results":"105","hashOfConfig":"65"},{"size":4044,"mtime":1614081707202,"results":"106","hashOfConfig":"65"},{"size":1069,"mtime":1614072358514,"results":"107","hashOfConfig":"65"},{"size":2392,"mtime":1614085884739,"results":"108","hashOfConfig":"65"},{"size":1807,"mtime":1614009030864,"results":"109","hashOfConfig":"65"},{"size":1630,"mtime":1613918807680,"results":"110","hashOfConfig":"65"},{"size":1497,"mtime":1614008918520,"results":"111","hashOfConfig":"65"},{"size":1699,"mtime":1614163384861,"results":"112","hashOfConfig":"65"},{"size":1811,"mtime":1614082766460,"results":"113","hashOfConfig":"65"},{"size":1224,"mtime":1614103070377,"results":"114","hashOfConfig":"65"},{"size":1300,"mtime":1614078472597,"results":"115","hashOfConfig":"65"},{"size":970,"mtime":1614117548966,"results":"116","hashOfConfig":"65"},{"size":233,"mtime":1614024396502,"results":"117","hashOfConfig":"65"},{"size":1537,"mtime":1614082309435,"results":"118","hashOfConfig":"65"},{"size":675,"mtime":1614083014818,"results":"119","hashOfConfig":"65"},{"size":2470,"mtime":1614083061140,"results":"120","hashOfConfig":"65"},{"size":1779,"mtime":1614105727748,"results":"121","hashOfConfig":"65"},{"size":982,"mtime":1614083085127,"results":"122","hashOfConfig":"65"},{"size":1026,"mtime":1614163376575,"results":"123","hashOfConfig":"65"},{"size":1414,"mtime":1614102435687,"results":"124","hashOfConfig":"65"},{"size":1244,"mtime":1614163408688,"results":"125","hashOfConfig":"65"},{"size":892,"mtime":1614087613968,"results":"126","hashOfConfig":"65"},{"size":504,"mtime":1614161919099,"results":"127","hashOfConfig":"65"},{"size":1165,"mtime":1614164786781,"results":"128","hashOfConfig":"65"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},"hlthki",{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"11vlfv1",{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"131"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"131"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"131"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"131"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"186","usedDeprecatedRules":"131"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"131"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"198","usedDeprecatedRules":"131"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"201","usedDeprecatedRules":"131"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"131"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"207","usedDeprecatedRules":"131"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"210","usedDeprecatedRules":"131"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"213","usedDeprecatedRules":"131"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"216","usedDeprecatedRules":"131"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"221","usedDeprecatedRules":"131"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"224","usedDeprecatedRules":"131"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"131"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"131"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"131"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"131"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"131"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"131"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"131"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\index.js",[],["278","279"],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\reportWebVitals.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\App.js",[],"D:\\dev\\BookRecipes\\bookrecipes.webapi\\client\\src\\index.js",["280","281"],"D:\\dev\\BookRecipes\\bookrecipes.webapi\\client\\src\\components\\App.js",["282","283"],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Footer\\Footer.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Header\\Header.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\IngredientsContainer.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Ingredients\\Ingredients.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Ingredients\\Ingredient.js",["284"],"import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Typography, Button, Tooltip } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    list: {\r\n        width: 250,\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n    ingredientPhoto: {\r\n        width: 200,\r\n        height:200\r\n    }\r\n});\r\n\r\n\r\nconst Ingredient = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const CurrentInform = () => (\r\n        <div>\r\n            <span><Typography>{props.id}. {props.name}. You have {props.ingredientsInRecipe.length} recipes with this ingredients.</Typography></span>\r\n            <span><img alt={props.name} className={classes.ingredientPhoto} src=\"https://source.unsplash.com/random\" /></span>\r\n            <span>\r\n                <ul>\r\n                    {\r\n                        props.ingredientsInRecipe.map((recipe) => {\r\n                            <li key={recipe.id}>Recipe - {recipe.recipeId}. Count this ingredients - {recipe.countIngredient}</li>\r\n                        })\r\n                    }\r\n                </ul>\r\n            </span>\r\n        </div>    \r\n        )\r\n\r\n        return (\r\n            <li>\r\n                <Tooltip title={CurrentInform()} placement=\"right-start\">\r\n                    <Button><Typography>{props.name}.</Typography></Button>\r\n                </Tooltip>\r\n            </li>\r\n        )\r\n}\r\n\r\nIngredient.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    ingredientsInRecipe: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            countIngredient: PropTypes.string.isRequired,\r\n            recipeId: PropTypes.number.isRequired,\r\n            ingredientId: PropTypes.number.isRequired\r\n        }).isRequired\r\n    ).isRequired\r\n    //id: PropTypes.number.isRequired,\r\n    //getIngredient: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Ingredient;\r\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\SideBar\\SideBar.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\RecipeContainer.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Recipes\\Recipe.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\RecipesContainer.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Recipes\\Recipes.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\SideBarContainer.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\ProfileContainer.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Profile\\Profile.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\common\\Login.js",["285","286"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport InputReduxMUI from '../../utiles/ReduxMUIForms/InputReduxMUI';\r\nimport CheckboxReduxMUI from '../../utiles/ReduxMUIForms/CheckboxReduxMUI';\r\nimport { maxLengthCreator, minLengthCreator, required } from '../../utiles/vaildators/validators';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        /*minHeight: '100vh',*/\r\n    },\r\n    footer: {\r\n        padding: theme.spacing(3, 2),\r\n        marginTop: 'auto',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\r\n    },\r\n}));\r\n\r\nconst minLength3 = minLengthCreator(3)\r\nconst maxLength30 = maxLengthCreator(30)\r\n\r\nlet LoginForm = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <Grid direction=\"row\" container>\r\n                    <Grid container item >Login</Grid>\r\n                    <Grid container item >\r\n                        <Field name={\"login\"} type=\"input\" component={InputReduxMUI} label=\"Login\"\r\n                            validate={[required, minLength3]} />\r\n                    </Grid>\r\n\r\n                    <Grid container item >Password</Grid>\r\n                    <Grid container item >\r\n                        <Field name={\"password\"} component={InputReduxMUI} label=\"Password\"\r\n                            validate={[required, maxLength30]} />\r\n                    </Grid>\r\n\r\n                    <Grid container item md={5}>\r\n                        <Field name={\"remember me\"} type=\"checkbox\" component={CheckboxReduxMUI} />\r\n                    </Grid>\r\n                    <Grid container item md={3}>\r\n                        <Field name={\"submit\"} type=\"submit\" component={Button}>\r\n                            Log In\r\n                        </Field>\r\n                    </Grid>\r\n                    <Grid container item>Remember me</Grid>\r\n\r\n                </Grid>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nlet LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nlet Login = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={props.onSubmit} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\DAL\\api.js",["287"],"import * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"/api\",\r\n    /*headers: {\r\n        \"API-KEY\" : \"hash-kod\"\r\n    }*/\r\n})\r\n\r\nexport const ingredientsAPI = {\r\n    getIngredients() {\r\n        return instance.get(`Ingredients/Ingredients`).then(response => {\r\n            return response.data\r\n        });\r\n    },\r\n}\r\n\r\nexport const profilesAPI = {\r\n    getProfile(id) {\r\n        return instance.get(`Profile/${id}`).then(response => {\r\n            return response.data\r\n        });\r\n    },\r\n}\r\n\r\nconst profileMock = {\r\n    id: 1,\r\n    name: \"Subzero\",\r\n    photo: \"https://source.unsplash.com/random\",\r\n    status: \"So so\",\r\n    description: \"To jest najliepsze co zrobily ludzi. Aromatny zapazch, a jaki kolor, smack wymbitny.\",\r\n    socailNetworkings: [\r\n        {\r\n            id: 1,\r\n            name: \"Git Hub\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Facebook\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Telegram\"\r\n        },\r\n    ],\r\n    posts: [\r\n        {\r\n            id: 0,\r\n            title: \"Tonight I'm cooked some fine cake!\",\r\n            main: \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\",\r\n            photo: \"https://source.unsplash.com/random\"\r\n        },\r\n        {\r\n            id: 1,\r\n            title: \"Some photo for you! Duddde\",\r\n            main: \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\",\r\n            photo: \"https://source.unsplash.com/random\"\r\n        }\r\n    ],\r\n    newPostTitle: \"\",\r\n    newPostBody: \"\"\r\n}","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\ingredientAction.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\ingredientsAction.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\actionTypes.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\profileAction.js",["288"],"import {\n    GET_PROFILE_REQUEST,\n    GET_PROFILE_SUCCESS,\n    GET_PROFILE_ERROR,\n}\n    from './actionTypes'\n\nimport {profilesAPI} from '../../DAL/api'\n\nexport function requestProfile(id) {\n    return {\n        type: GET_PROFILE_REQUEST,\n        id: id\n    }\n}\n\n/*export function receiveProfile(item) {\n    return {\n        type: GET_PROFILE_SUCCESS,\n        profile: item\n    }\n}*/\n\nexport function receiveProfile() {\n    return {\n        type: GET_PROFILE_SUCCESS\n    }\n}\n\n\nexport function errorProfile(error) {\n    return {\n        type: GET_PROFILE_ERROR,\n        error: error\n    }\n}\n\n\n//��������� ������\nexport function getProfile(id) {\n    return (dispatch) => {\n        dispatch(requestProfile(id))\n        dispatch(receiveProfile())\n    }\n}\n\n/*export function getProfile(id) {\n    return (dispatch) => {\n        dispatch(requestProfile(id))\n\n        profilesAPI.getProfile().then(data => {\n            dispatch(receiveProfile(data))\n        }).catch(error => {\n            dispatch(errorProfile(error))\n        })\n    }\n}*/\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\store\\index.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\index.js",["289"],"﻿import { combineReducers } from 'redux'\r\nimport friendsReducer from './friendsReducer'\r\nimport ingredientReducer from './ingredientReducer'\r\nimport ingredientsReducer from './ingredientsReducer'\r\nimport messagesReducer from './messagesReducer'\r\nimport postsReducer from './postsReducer'\r\nimport profileReducer from './profileReducer'\r\nimport informatorReducer from './informatorReducer'\r\nimport { reducer as formReducer } from 'redux-form' \r\nimport loginReducer from './loginReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    form: formReducer,\r\n    ingredient: ingredientReducer,\r\n    ingredients: ingredientsReducer,\r\n    profiles: profileReducer,\r\n    messages: messagesReducer,\r\n    posts: postsReducer,\r\n    friends: friendsReducer,\r\n    informator: informatorReducer,\r\n    login: loginReducer\r\n})\r\n\r\nexport default rootReducer;\r\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\ingredientReducer.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\ingredientsReducer.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\profileReducer.js",["290","291"],"import {\r\n    GET_PROFILE_REQUEST,\r\n    GET_PROFILE_SUCCESS,\r\n    GET_PROFILE_ERROR,\r\n    GET_PROFILES_REQUEST,\r\n    GET_PROFILES_SUCCESS,\r\n    GET_PROFILES_ERROR,\r\n    \r\n} from '../actions/actionTypes'\r\n\r\nimport profiles from './profilesMock'\r\n\r\nconst initialState = {\r\n    currentProfileId: 0,\r\n    profile: null,\r\n    profiles: null,\r\n    fetching: false\r\n}\r\n\r\n\r\nexport default function profilesReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_PROFILE_REQUEST:\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    id: profiles.find((profile) => profile.id == action.id).id,\r\n                },\r\n                fetching: true\r\n            }\r\n        case GET_PROFILE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                profile: profiles.find((profile) => profile.id == state.profile.id),\r\n                fetching: false\r\n            }\r\n        case GET_PROFILE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                fetching: false\r\n            }\r\n\r\n        case GET_PROFILES_REQUEST:\r\n            return {\r\n                ...state,\r\n                fetching: true\r\n            }\r\n        case GET_PROFILES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                profiles: profiles,\r\n                fetching: false\r\n            }\r\n        case GET_PROFILES_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                fetching: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\MessagesContainer.js",["292","293"],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\Messages.js",["294"],"﻿import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Grid} from '@material-ui/core';\r\n\r\nimport SideBar from './SideBar/SideBar';\r\nimport { Route } from 'react-router-dom';\r\nimport Notes from './Notes/Notes';\r\nimport ChatContainer from '../../containers/ChatContainer';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    friendsBar: {\r\n        backgroundColor: \"#e57373\",\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n    notes: {\r\n        height: 60,\r\n        borderRadius: '100%',\r\n        border: 'inset'\r\n    }\r\n}));\r\n\r\nconst Messages = (props) => {\r\n    const classes = useStyles();\r\n\r\n        return (\r\n            <>\r\n                <Grid container >\r\n                    <Grid container item md={8} >\r\n                        <Route path=\"/messages\" exact>\r\n                            <Notes/>\r\n                        </Route>\r\n                        <Route path=\"/messages/chat/:userId\" exact>\r\n                            <ChatContainer addMessage={props.addMessage} />\r\n                        </Route>\r\n                    </Grid>\r\n                    <Grid className={classes.friendsBar} container item md={4}>\r\n                        <SideBar friends={props.friends} /> \r\n                    </Grid>\r\n                </Grid>\r\n            </>\r\n        )\r\n}\r\n\r\nexport default Messages;\r\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\messagesReducer.js",["295","296","297"],"﻿import {\r\n    ADD_MESSAGE_TO_FRIEND,\r\n    GET_FRIEND_MESSAGES_REQUEST,\r\n    GET_FRIEND_MESSAGES_SUCCESS,\r\n    GET_FRIEND_MESSAGES_ERROR\r\n} from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    id: 0,\r\n    userId: null,\r\n    messages: [\r\n        {\r\n            id: 0,\r\n            text: \"Hej, jak dzisiaj siebie czujesz ?\",\r\n            isMe: false,\r\n            isChange: false,\r\n            dataCreated: {\r\n                data: \"20.02.2021\",\r\n                time: \"20:32\"\r\n            }\r\n        },\r\n        {\r\n            id: 1,\r\n            text: \"Mam do Ciebe pytanie.\",\r\n            isMe: false,\r\n            isChange: false,\r\n            dataCreated: {\r\n                data: \"20.02.2021\",\r\n                time: \"20:32\"\r\n            }\r\n        },\r\n        {\r\n            id: 2,\r\n            text: \"Czeszcz, Jacek. Wszystko dobrze\",\r\n            isMe: true,\r\n            isChange: true,\r\n            dataCreated: {\r\n                data: \"20.02.2021\",\r\n                time: \"20:42\"\r\n            }\r\n        },\r\n        {\r\n            id: 3,\r\n            text: \"Co się stało ?\",\r\n            isMe: true,\r\n            isChange: false,\r\n            dataCreated: {\r\n                data: \"20.02.2021\",\r\n                time: \"20:43\"\r\n            }\r\n        }\r\n    ]\r\n}\r\n\r\nlet messagesMock = [\r\n    {\r\n        id: 0,\r\n        userId: 0,\r\n        messages: [\r\n            {\r\n                id: 0,\r\n                text: \"Hej, jak dzisiaj siebie czujesz ?\",\r\n                isMe: false,\r\n                isChange: false,\r\n                dataCreated: {\r\n                    data: \"20.02.2021\",\r\n                    time: \"20:32\"\r\n                }\r\n            },\r\n            {\r\n                id: 1,\r\n                text: \"Mam do Ciebe pytanie.\",\r\n                isMe: false,\r\n                isChange: false,\r\n                dataCreated: {\r\n                    data: \"20.02.2021\",\r\n                    time: \"20:32\"\r\n                }\r\n            },\r\n            {\r\n                id: 2,\r\n                text: \"Czeszcz, Jacek. Wszystko dobrze\",\r\n                isMe: true,\r\n                isChange: true,\r\n                dataCreated: {\r\n                    data: \"20.02.2021\",\r\n                    time: \"20:42\"\r\n                }\r\n            },\r\n            {\r\n                id: 3,\r\n                text: \"Co się stało ?\",\r\n                isMe: true,\r\n                isChange: false,\r\n                dataCreated: {\r\n                    data: \"20.02.2021\",\r\n                    time: \"20:43\"\r\n                }\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        id: 1,\r\n        userId: 1,\r\n        messages: [\r\n            {\r\n                id: 0,\r\n                text: \"Cześć, co slychać?\",\r\n                isMe: false,\r\n                isChange: false,\r\n                dataCreated: {\r\n                    data: \"20.02.2021\",\r\n                    time: \"20:32\"\r\n                }\r\n            },\r\n            {\r\n                id: 1,\r\n                text: \"I'm fine, you ?\",\r\n                isMe: true,\r\n                isChange: false,\r\n                dataCreated: {\r\n                    data: \"20.02.2021\",\r\n                    time: \"20:32\"\r\n                }\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        id: 2,\r\n        userId: 2,\r\n        messages: [\r\n            {\r\n                id: 0,\r\n                text: \"You know, I'm God!\",\r\n                isMe: false,\r\n                isChange: false,\r\n                dataCreated: {\r\n                    data: \"20.02.2021\",\r\n                    time: \"20:32\"\r\n                }\r\n            },\r\n            {\r\n                id: 1,\r\n                text: \"Okay ...dude\",\r\n                isMe: true,\r\n                isChange: false,\r\n                dataCreated: {\r\n                    data: \"20.02.2021\",\r\n                    time: \"20:32\"\r\n                }\r\n            },\r\n            {\r\n                id: 2,\r\n                text: \"No, I'm God!\",\r\n                isMe: false,\r\n                isChange: false,\r\n                dataCreated: {\r\n                    data: \"20.02.2021\",\r\n                    time: \"20:32\"\r\n                }\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        id: 3,\r\n        userId: 3,\r\n        messages: [\r\n            {\r\n                id: 0,\r\n                text: \"Where is Subzero ?!\",\r\n                isMe: false,\r\n                isChange: false,\r\n                dataCreated: {\r\n                    data: \"20.02.2021\",\r\n                    time: \"20:32\"\r\n                }\r\n            }\r\n        ],\r\n    }\r\n]\r\n\r\nexport default function messagesReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE_TO_FRIEND:\r\n            const newMessage = {\r\n                id: 2,\r\n                text: action.text,\r\n                isMe: true,\r\n                isChange: false,\r\n                dataCreated: {\r\n                    data: \"20.02.2021\",\r\n                    time: \"20:32\"\r\n                }\r\n            }\r\n            messagesMock = messagesMock.map((user) => (\r\n                (state.userId == user.userId) ?\r\n                    user = {\r\n                        ...user,\r\n                        messages: [...user.messages, newMessage]\r\n                    } : user\r\n            ))\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage]\r\n            }\r\n        case GET_FRIEND_MESSAGES_REQUEST:\r\n            return {\r\n                ...state,\r\n                userId: action.userId\r\n            }\r\n        case GET_FRIEND_MESSAGES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                messages: messagesMock.find((posts) => (\r\n                    posts.userId == state.userId\r\n                )).messages\r\n            }\r\n        case GET_FRIEND_MESSAGES_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\messagesAction.js",["298"],"import {\n    ADD_MESSAGE_TO_FRIEND,\n    GET_FRIEND_MESSAGES_REQUEST,\n    GET_FRIEND_MESSAGES_SUCCESS,\n    GET_FRIEND_MESSAGES_ERROR\n}\n    from './actionTypes'\n\nimport {profilesAPI} from '../../DAL/api'\n\nexport function addMessage(text) {\n    return {\n        type: ADD_MESSAGE_TO_FRIEND,\n        text: text\n    }\n}\n\nexport function requestFriendMessages(userId) {\n    return {\n        type: GET_FRIEND_MESSAGES_REQUEST,\n        userId: userId\n    }\n}\n\nexport function receiveFriendMessages() {\n    return {\n        type: GET_FRIEND_MESSAGES_SUCCESS,\n    }\n}\n\nexport function errorFriendMessages(error) {\n    return {\n        type: GET_FRIEND_MESSAGES_ERROR,\n        error: error\n    }\n}\n\nexport function getFriendMessages(userId) {\n    return (dispatch) => {\n        dispatch(requestFriendMessages(userId))\n\n        dispatch(receiveFriendMessages())\n    }\n}\n//��������� ������\n\n/*export function getProfile(id) {\n    return (dispatch) => {\n        dispatch(requestProfile(id))\n\n        profilesAPI.getProfile().then(data => {\n            dispatch(receiveProfile(data))\n        }).catch(error => {\n            dispatch(errorProfile(error))\n        })\n    }\n}*/","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\SideBar\\SideBar.js",["299"],"﻿import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Grid, Button,  InputBase, Icon, MenuList, MenuItem} from '@material-ui/core';\r\n\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport Friends from './Friends/Friends';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    friendsBar: {\r\n        backgroundColor: theme.palette.grey[500],\r\n    },\r\n    linkText: {\r\n        textDecoration: \"none\",\r\n        color : \"black\"\r\n    },\r\n    notesIcon: {\r\n        color: \"#388e3c\",\r\n    },\r\n    notesButton: {\r\n        height: 60,\r\n        borderRadius: '100%',\r\n        border: 'inset',\r\n        borderColor: \"green\"\r\n\r\n    },\r\n    friendAvatar: {\r\n        anchorOrigin: {\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n        }\r\n    },\r\n    searchInput: {\r\n        width: \"100%\",\r\n        height: \"auto\"\r\n    }\r\n}));\r\n\r\nconst SideBar= (props) => {\r\n    const classes = useStyles();\r\n\r\n        return (\r\n            <>\r\n                <Grid direction=\"column\" container item>\r\n                    <MenuList>\r\n                        <MenuItem>\r\n                            <Grid direction=\"column\" container item alignItems=\"stretch\">\r\n                                <InputBase\r\n                                    className={'searchInput'}\r\n                                    placeholder={'Search...'}\r\n                                    startAdornment={<Icon>search</Icon>}\r\n                                />\r\n                            </Grid>\r\n                        </MenuItem>\r\n\r\n                        <MenuItem className={classes.buttonNavigation}>\r\n                            <Grid container item>\r\n                                <NavLink to=\"/messages\" className={classes.linkText}>\r\n                                    <span>NOTES</span>\r\n                                    <Button className={classes.notesButton}>\r\n                                        <BookmarkBorderIcon className={classes.notesIcon} />\r\n                                    </Button>\r\n                                </NavLink>\r\n                            </Grid>\r\n                        </MenuItem>\r\n\r\n                        <Friends friends={props.friends} />\r\n\r\n                    </MenuList>\r\n                </Grid>\r\n            </>\r\n        )\r\n}\r\n\r\nexport default SideBar;\r\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\Chat\\Chat.js",["300"],"﻿import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport MessageCreator from './MessageCreator/MessageCreator';\r\nimport ChatDisplayer from './ChatDisplayer/ChatDisplayer';\r\nimport Header from './Header/Header';\r\nimport { Divider, Grid} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        /*flexGrow: 1,*/\r\n    },\r\n    paper: {\r\n        width: \"100%\",\r\n        height: \"100%\"\r\n    }\r\n}));\r\n\r\nconst Chat = (props) => {\r\n    const classes = useStyles();\r\n    const onSubmit = (formData) => {\r\n        props.addMessage(formData.messageBody)\r\n    }\r\n\r\n    return (\r\n        <Grid className={classes.root} container >\r\n            <Grid container item>\r\n                <Header />\r\n                <Divider />\r\n            </Grid>\r\n            <Grid container item>\r\n                <ChatDisplayer messages={props.messages} />\r\n            </Grid>\r\n            <Grid container item>\r\n                <Divider />\r\n                <MessageCreator onSubmit={onSubmit} />\r\n            </Grid>\r\n        </Grid>\r\n        )\r\n}\r\n\r\n/*<Grid container>\r\n    <Grid container item>\r\n        <Header />\r\n    </Grid>\r\n    <Grid container item>\r\n        <ChatDisplayer messages={props.messages} />\r\n    </Grid>\r\n    <Grid container item alignItems=\"flex-end\">\r\n        <MessageCreator onSubmit={onSubmit} />\r\n    </Grid>\r\n</Grid>\r\n*/\r\n\r\nexport default Chat;\r\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\Chat\\ChatDisplayer\\ChatDisplayer.js",["301"],"﻿import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Grid, Typography, Paper } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    bg: {\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.grey[300],\r\n        width: \"100%\",\r\n    }\r\n}));\r\n\r\nconst ChatDisplayer = (props) => {\r\n    const classes = useStyles();\r\n\r\n        return (\r\n            <>\r\n                {\r\n                    props.messages.map((message) => (\r\n                        <Grid key={message.id} container item justify={message.isMe ? \"flex-end\" : \"flex-start\"}>\r\n                            {/*<Typography>{message.isChange ? \"Changed\": null}</Typography>\r\n                                    <Typography>{message.dataCreated.data} {message.dataCreated.time}</Typography>*/}\r\n                            <Paper className={classes.bg}>\r\n                                <Typography>\r\n                                    {message.text}\r\n                                </Typography>\r\n                            </Paper>\r\n                        </Grid>\r\n                    ))\r\n                }\r\n            </>\r\n        )\r\n}\r\n\r\nexport default ChatDisplayer;\r\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\Chat\\Header\\Header.js",["302"],"﻿import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Grid, Avatar, Chip, IconButton} from '@material-ui/core';\r\n\r\nimport LocalPhoneIcon from '@material-ui/icons/LocalPhone';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport VideoCallIcon from '@material-ui/icons/VideoCall';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    \r\n    root: {\r\n    }\r\n}));\r\n\r\nconst Header = (props) => {\r\n    const classes = useStyles();    \r\n        return (\r\n            <>\r\n                <Grid className={classes.root} container item justify=\"flex-start\" alignItems=\"center\" md={6}>\r\n                    <IconButton size=\"small\" color=\"primary\" >\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                    <IconButton size=\"small\" color=\"primary\" aria-label=\"send\">\r\n                        <VideoCallIcon />\r\n                    </IconButton>\r\n                    <IconButton size=\"small\" color=\"primary\" aria-label=\"send\">\r\n                        <LocalPhoneIcon />\r\n                    </IconButton>\r\n                </Grid>\r\n                <Grid container item justify=\"flex-end\" alignItems=\"center\" md={6}>\r\n                    <Chip label=\"Online\" color=\"secondary\" />\r\n                    <Avatar alt=\"Remy Sharp\" src=\"https://source.unsplash.com/random\" />\r\n                </Grid>\r\n            </>\r\n        )\r\n}\r\n\r\nexport default Header;\r\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\Chat\\MessageCreator\\MessageCreator.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\Notes\\Notes.js",["303","304"],"﻿import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    friendsBar: {\r\n        backgroundColor: theme.palette.grey[500],\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n    notes: {\r\n        height: 60,\r\n        borderRadius: '100%',\r\n        border: 'inset'\r\n    }\r\n}));\r\n\r\nconst Notes = (props) => {\r\n    /*const classes = useStyles();*/\r\n\r\n        return (\r\n            <>\r\n                <Typography>Notes</Typography>\r\n            </>\r\n        )\r\n}\r\n\r\nexport default Notes;\r\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\SideBar\\Friends\\Friends.js",["305"],"﻿import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {Typography, Avatar, Badge, MenuItem } from '@material-ui/core';\r\n\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        /*marginRight: theme.spacing(2),*/\r\n        /*width: \"auto\"*/\r\n    },\r\n    linkText: {\r\n        textDecoration: \"none\",\r\n        color : \"black\"\r\n    },\r\n    notesIcon: {\r\n        color: \"#388e3c\",\r\n    },\r\n    notesButton: {\r\n        height: 60,\r\n        borderRadius: '100%',\r\n        border: 'inset',\r\n        borderColor: \"green\"\r\n\r\n    },\r\n    friendAvatar: {\r\n        anchorOrigin: {\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n        }\r\n    },\r\n    buttonNavigation: {\r\n        borderRadius: \"5px 0 0 5px\",\r\n    }\r\n}));\r\n\r\nconst Friends = (props) => {\r\n    const classes = useStyles();\r\n\r\n        return (\r\n            <>\r\n                {props.friends.map((friend) => (\r\n                    <NavLink key={friend.id} to={\"/messages/chat/\" + friend.id} className={classes.linkText}>\r\n                        <MenuItem className={classes.buttonNavigation}>\r\n                            <Badge color=\"secondary\" badgeContent={friend.newMessages}>\r\n                                <MailIcon />\r\n                            </Badge>\r\n                            <Badge>\r\n                                <Typography>{friend.name}</Typography>\r\n                            </Badge>\r\n                            <Badge>\r\n                                <Avatar alt={friend.name} src={friend.photo} />\r\n                            </Badge>\r\n                        </MenuItem>\r\n                    </NavLink>\r\n                ))}\r\n            </>\r\n        )\r\n}\r\n\r\n/*{\r\n    props.friends.map((friend) => (\r\n        <Grid container item justify=\"flex-end\">\r\n            <NavLink to=\"/messages/chat\" className={classes.linkText}>\r\n                <Badge color=\"secondary\" badgeContent={friend.newMessages}>\r\n                    <MailIcon />\r\n                </Badge>\r\n                <Badge>\r\n                    <Typography>{friend.name}</Typography>\r\n                </Badge>\r\n                <Badge>\r\n                    <Avatar alt={friend.name} src={friend.photo} />\r\n                </Badge>\r\n            </NavLink>\r\n        </Grid>\r\n    ))\r\n}*/\r\nexport default Friends;\r\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\postsReducer.js",["306"],"import {\r\n    ADD_POST_TO_PROFILE,\r\n    GET_USER_POSTS_REQUEST,\r\n    GET_USER_POSTS_SUCCESS,\r\n    GET_USER_POSTS_ERROR\r\n\r\n} from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    id: 0,\r\n    userId: null,\r\n    posts: [\r\n        {\r\n            id: 0,\r\n            title: \"Tonight I'm cooked some fine cake!\",\r\n            main: \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\",\r\n            photo: \"https://source.unsplash.com/random\"\r\n        }\r\n    ],\r\n}\r\n\r\nlet postsMock = [\r\n    {\r\n        id: 0,\r\n        userId: 0,\r\n        posts: [\r\n            {\r\n                id: 0,\r\n                title: \"Tonight I'm cooked some fine cake!\",\r\n                main: \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\",\r\n                photo: \"https://source.unsplash.com/random\"\r\n            },\r\n            {\r\n                id: 1,\r\n                title: \"Some photo for you! Duddde\",\r\n                main: \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\",\r\n                photo: \"https://source.unsplash.com/random\"\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        id: 1,\r\n        userId: 1,\r\n        posts: [\r\n            {\r\n                id: 0,\r\n                title: \"SnowFlakes!\",\r\n                main: \"It's so beautiful\",\r\n                photo: \"https://source.unsplash.com/random\"\r\n            },\r\n            {\r\n                id: 1,\r\n                title: \"I win Scorpion\",\r\n                main: \"Just look to this punch\",\r\n                photo: \"https://source.unsplash.com/random\"\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        id: 2,\r\n        userId: 2,\r\n        posts: [\r\n            {\r\n                id: 0,\r\n                title: \"God!\",\r\n                main: \"Thunder god\",\r\n                photo: \"https://source.unsplash.com/random\"\r\n            },\r\n            {\r\n                id: 1,\r\n                title: \"It's me\",\r\n                main: \"Just look to the God\",\r\n                photo: \"https://source.unsplash.com/random\"\r\n            },\r\n            {\r\n                id: 1,\r\n                title: \"Alarm\",\r\n                main: \"We need to protect the Earth!\",\r\n                photo: \"https://source.unsplash.com/random\"\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        id: 3,\r\n        userId: 3,\r\n        posts: [\r\n            {\r\n                id: 0,\r\n                title: \"Wheres Subzero ?\",\r\n                main: \"I need him now!\",\r\n                photo: \"https://source.unsplash.com/random\"\r\n            }\r\n        ],\r\n    }\r\n]\r\n\r\nexport default function postsReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_POST_TO_PROFILE:\r\n            const newPost = {\r\n                id: 3,\r\n                title: action.post.postTitle,\r\n                main: action.post.postBody,\r\n                photo: \"https://source.unsplash.com/random\"\r\n            }\r\n            postsMock = postsMock.map((user) => (\r\n                (state.userId === user.userId) ?\r\n                    user = {\r\n                        ...user,\r\n                        posts : [...state.posts, newPost]\r\n                    } : user\r\n                ))\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            }\r\n        case GET_USER_POSTS_REQUEST:\r\n            return {\r\n                ...state,\r\n                userId: action.userId\r\n            }\r\n        case GET_USER_POSTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                posts: postsMock.find( (posts) => (\r\n                    posts.userId == state.userId\r\n                )).posts\r\n            }\r\n        case GET_USER_POSTS_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\postsAction.js",["307"],"import {\n    ADD_POST_TO_PROFILE,\n    GET_USER_POSTS_REQUEST,\n    GET_USER_POSTS_SUCCESS,\n    GET_USER_POSTS_ERROR\n}\n    from './actionTypes'\n\nimport {profilesAPI} from '../../DAL/api'\n\nexport function addPost(post) {\n    return {\n        type: ADD_POST_TO_PROFILE,\n        post: post\n    }\n}\n\nexport function requestUserPosts(userId) {\n    return {\n        type: GET_USER_POSTS_REQUEST,\n        userId: userId\n    }\n}\n\nexport function receiveUserPosts() {\n    return {\n        type: GET_USER_POSTS_SUCCESS,\n    }\n}\n\nexport function errorUserPosts() {\n    return {\n        type: GET_USER_POSTS_ERROR,\n    }\n}\n\nexport function getUserPosts(userId) {\n    return (dispatch) => {\n        dispatch(requestUserPosts(userId))\n\n        dispatch(receiveUserPosts())\n    }\n}\n\n\n//��������� ������\n\n/*export function getProfile(id) {\n    return (dispatch) => {\n        dispatch(requestProfile(id))\n\n        profilesAPI.getProfile().then(data => {\n            dispatch(receiveProfile(data))\n        }).catch(error => {\n            dispatch(errorProfile(error))\n        })\n    }\n}*/\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\profilesMock.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\friendsAction.js",["308"],"import {\n    GET_FRIENDS_REQUEST,\n    GET_FRIENDS_SUCCESS,\n    GET_FRIENDS_ERROR,\n    GET_FRIEND_LITTLE_INFROMATIONS_REQUEST,\n    GET_FRIEND_LITTLE_INFROMATIONS_SUCCESS,\n    GET_FRIEND_LITTLE_INFROMATIONS_ERROR,\n    CLEAR_FRIEND_LITTLE_INFROMATIONS\n}\n    from './actionTypes'\n\nimport {profilesAPI} from '../../DAL/api'\n\nexport function requestUserFriends(userId) {\n    return {\n        type: GET_FRIENDS_REQUEST,\n        userId: userId\n    }\n}\n\nexport function receiveUserFriends() {\n    return {\n        type: GET_FRIENDS_SUCCESS,\n    }\n}\n\nexport function errorUserFriends() {\n    return {\n        type: GET_FRIENDS_ERROR,\n    }\n}\n\nexport function getUserFriends(userId) {\n    return (dispatch) => {\n        dispatch(requestUserFriends(userId))\n\n        dispatch(receiveUserFriends())\n    }\n}\n\nexport function requestFriendLittleInformation(userId) {\n    return {\n        type: GET_FRIEND_LITTLE_INFROMATIONS_REQUEST,\n        userId: userId\n    }\n}\n\nexport function receiveFriendLittleInfromation() {\n    return {\n        type: GET_FRIEND_LITTLE_INFROMATIONS_SUCCESS,\n    }\n}\n\nexport function errorFriendLittleInfromation() {\n    return {\n        type: GET_FRIEND_LITTLE_INFROMATIONS_ERROR,\n    }\n}\n\nexport function getLittleInfromationAboutFriend(userId) {\n    return (dispatch) => {\n        dispatch(requestFriendLittleInformation(userId))\n\n        dispatch(receiveFriendLittleInfromation())\n    }\n}\n\nexport function clearFriends() {\n    return {\n        type: CLEAR_FRIEND_LITTLE_INFROMATIONS\n    }\n}\n//��������� ������\n\n/*export function getProfile(id) {\n    return (dispatch) => {\n        dispatch(requestProfile(id))\n\n        profilesAPI.getProfile().then(data => {\n            dispatch(receiveProfile(data))\n        }).catch(error => {\n            dispatch(errorProfile(error))\n        })\n    }\n}*/\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\friendsReducer.js",["309","310"],"import {\r\n    GET_FRIENDS_REQUEST,\r\n    GET_FRIENDS_SUCCESS,\r\n    GET_FRIENDS_ERROR,\r\n\r\n} from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    currentUserId: null,\r\n    friends: []\r\n}\r\n\r\nlet friendsMock = [\r\n    {\r\n        userId:0,\r\n        friends: [\r\n            {\r\n                userId:1\r\n            },\r\n            {\r\n                userId:2\r\n            },\r\n            ,\r\n            {\r\n                userId:3\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        userId: 1,\r\n        friends: [\r\n            {\r\n                userId: 0\r\n            },\r\n            {\r\n                userId: 2\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        userId :2,\r\n        friends: [\r\n            {\r\n                userId: 0\r\n            },\r\n            {\r\n                userId: 1\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        userId: 3,\r\n        friends: [\r\n            {\r\n                userId: 0\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nexport default function friendsReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_FRIENDS_REQUEST:\r\n            return {\r\n                ...state,\r\n                currentUserId: action.userId\r\n            }\r\n        case GET_FRIENDS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                friends: friendsMock.find((friend) => (\r\n                    friend.userId == state.currentUserId\r\n                )).friends\r\n            }\r\n        case GET_FRIENDS_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\informatorReducer.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\FriendsContainer.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Friends\\Friends.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\hoc\\withAuthUser.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\hoc\\withFriends.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\utiles\\ReduxMUIForms\\InputReduxMUI.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\utiles\\ReduxMUIForms\\CheckboxReduxMUI.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\Chat\\MessageCreator\\MessageForm\\MessageForm.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Profile\\PostsWall\\PostsWall.js",["311"],"import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Grid } from '@material-ui/core';\r\nimport Posts from './Posts/Posts';\r\n\r\nimport PostForm from './PostForm/PostForm';\r\n\r\nconst useStyles = makeStyles({\r\n    createPost: {\r\n        border: \"outset\"\r\n    },\r\n});\r\n\r\n\r\nconst PostsWall = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <Grid container item>\r\n                <PostForm onSubmit={props.onSubmit} />\r\n            </Grid>\r\n            <Grid container item>\r\n                <Posts posts={props.posts} />\r\n            </Grid>\r\n        </>\r\n        )\r\n}\r\n\r\nexport default PostsWall;\r\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Profile\\PostsWall\\Posts\\Posts.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Profile\\PostsWall\\PostForm\\PostForm.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Profile\\Friends\\Friends.js",["312"],"import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Grid, Typography, Avatar, Badge } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    list: {\r\n        width: 250,\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n    rounded: {\r\n        width: 300,\r\n        height:300\r\n    },\r\n});\r\n\r\nconst Friends= (props) => {\r\n    const classes = useStyles();\r\n\r\n        return (\r\n            <>\r\n                <Grid container item>\r\n                    <Typography>Friends:</Typography>\r\n                    {\r\n                        props.friends.map((friend) => (\r\n                            <Badge key={friend.id}>\r\n                                { friend.name}\r\n                                <Avatar src={friend.photo} alt={friend.name} />\r\n                            </Badge>\r\n                        ))\r\n                    }\r\n                </Grid>\r\n            </>\r\n        )\r\n}\r\n\r\nexport default Friends;\r\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\ChatContainer.js",["313"],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\loginReducer.js",["314"],"import {\r\n    LOGIN_CHECK,\r\n    LOGUT\r\n} from '../actions/actionTypes'\r\n\r\nconst loginMock = [\r\n    {\r\n        userId: 0,\r\n        login: \"admini\",\r\n        password: 1234\r\n    },\r\n    {\r\n        userId: 1,\r\n        login: \"sub\",\r\n        password: 1234\r\n    },\r\n    {\r\n        userId: 2,\r\n        login: \"god\",\r\n        password: 1234\r\n    },\r\n    {\r\n        userId: 3,\r\n        login: \"wins\",\r\n        password: 1234\r\n    }\r\n]\r\n\r\nconst initialState = {\r\n    login: null,\r\n    isLogin: false,\r\n    userId: null\r\n}\r\n\r\nexport default function loginReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case LOGUT:\r\n            return {\r\n                ...state,\r\n                isLogin: false,\r\n                login: null,\r\n                userId: null\r\n            }\r\n        case LOGIN_CHECK:\r\n            const person = loginMock.find((users) => (\r\n                (users.login === action.data.login) && (users.password == action.data.password) ? true : false\r\n            ))\r\n            const checkLogin = person ? true : false;\r\n            const checkUserId = person ? person.userId : null;\r\n            const checklogin = person ? person.login : null;\r\n            return {\r\n                ...state,\r\n                isLogin: checkLogin,\r\n                login: checklogin,\r\n                userId: checkUserId\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\LoginContainer.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\loginAction.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\utiles\\vaildators\\validators.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\utiles\\selectors\\selectors.js",[],{"ruleId":"315","replacedBy":"316"},{"ruleId":"317","replacedBy":"318"},{"ruleId":"319","severity":1,"message":"320","line":2,"column":10,"nodeType":"321","messageId":"322","endLine":2,"endColumn":24},{"ruleId":"319","severity":1,"message":"323","line":2,"column":26,"nodeType":"321","messageId":"322","endLine":2,"endColumn":39},{"ruleId":"319","severity":1,"message":"324","line":2,"column":8,"nodeType":"321","messageId":"322","endLine":2,"endColumn":14},{"ruleId":"319","severity":1,"message":"325","line":4,"column":8,"nodeType":"321","messageId":"322","endLine":4,"endColumn":15},{"ruleId":"326","severity":1,"message":"327","line":33,"column":64,"nodeType":"328","messageId":"329","endLine":33,"endColumn":66},{"ruleId":"319","severity":1,"message":"330","line":27,"column":11,"nodeType":"321","messageId":"322","endLine":27,"endColumn":18},{"ruleId":"319","severity":1,"message":"330","line":66,"column":11,"nodeType":"321","messageId":"322","endLine":66,"endColumn":18},{"ruleId":"319","severity":1,"message":"331","line":27,"column":7,"nodeType":"321","messageId":"322","endLine":27,"endColumn":18},{"ruleId":"319","severity":1,"message":"332","line":8,"column":9,"nodeType":"321","messageId":"322","endLine":8,"endColumn":20},{"ruleId":"333","severity":1,"message":"334","line":1,"column":1,"nodeType":"335","messageId":"336","fix":"337"},{"ruleId":"338","severity":1,"message":"339","line":27,"column":63,"nodeType":"340","messageId":"336","endLine":27,"endColumn":65},{"ruleId":"338","severity":1,"message":"339","line":34,"column":64,"nodeType":"340","messageId":"336","endLine":34,"endColumn":66},{"ruleId":"333","severity":1,"message":"334","line":1,"column":1,"nodeType":"335","messageId":"336","fix":"341"},{"ruleId":"319","severity":1,"message":"342","line":8,"column":7,"nodeType":"321","messageId":"322","endLine":8,"endColumn":18},{"ruleId":"333","severity":1,"message":"334","line":1,"column":1,"nodeType":"335","messageId":"336","fix":"343"},{"ruleId":"333","severity":1,"message":"334","line":1,"column":1,"nodeType":"335","messageId":"336","fix":"344"},{"ruleId":"338","severity":1,"message":"339","line":196,"column":31,"nodeType":"340","messageId":"336","endLine":196,"endColumn":33},{"ruleId":"338","severity":1,"message":"339","line":215,"column":34,"nodeType":"340","messageId":"336","endLine":215,"endColumn":36},{"ruleId":"319","severity":1,"message":"332","line":9,"column":9,"nodeType":"321","messageId":"322","endLine":9,"endColumn":20},{"ruleId":"333","severity":1,"message":"334","line":1,"column":1,"nodeType":"335","messageId":"336","fix":"345"},{"ruleId":"333","severity":1,"message":"334","line":1,"column":1,"nodeType":"335","messageId":"336","fix":"346"},{"ruleId":"333","severity":1,"message":"334","line":1,"column":1,"nodeType":"335","messageId":"336","fix":"347"},{"ruleId":"333","severity":1,"message":"334","line":1,"column":1,"nodeType":"335","messageId":"336","fix":"348"},{"ruleId":"333","severity":1,"message":"334","line":1,"column":1,"nodeType":"335","messageId":"336","fix":"349"},{"ruleId":"319","severity":1,"message":"350","line":9,"column":7,"nodeType":"321","messageId":"322","endLine":9,"endColumn":16},{"ruleId":"333","severity":1,"message":"334","line":1,"column":1,"nodeType":"335","messageId":"336","fix":"351"},{"ruleId":"338","severity":1,"message":"339","line":126,"column":34,"nodeType":"340","messageId":"336","endLine":126,"endColumn":36},{"ruleId":"319","severity":1,"message":"332","line":9,"column":9,"nodeType":"321","messageId":"322","endLine":9,"endColumn":20},{"ruleId":"319","severity":1,"message":"332","line":12,"column":9,"nodeType":"321","messageId":"322","endLine":12,"endColumn":20},{"ruleId":"352","severity":1,"message":"353","line":16,"column":18,"nodeType":"354","messageId":"355","endLine":27,"endColumn":10},{"ruleId":"338","severity":1,"message":"339","line":72,"column":35,"nodeType":"340","messageId":"336","endLine":72,"endColumn":37},{"ruleId":"319","severity":1,"message":"330","line":18,"column":11,"nodeType":"321","messageId":"322","endLine":18,"endColumn":18},{"ruleId":"319","severity":1,"message":"330","line":21,"column":11,"nodeType":"321","messageId":"322","endLine":21,"endColumn":18},{"ruleId":"333","severity":1,"message":"334","line":1,"column":1,"nodeType":"335","messageId":"336","fix":"356"},{"ruleId":"338","severity":1,"message":"339","line":46,"column":72,"nodeType":"340","messageId":"336","endLine":46,"endColumn":74},"no-native-reassign",["357"],"no-negated-in-lhs",["358"],"no-unused-vars","'selectFromBook' is defined but never used.","Identifier","unusedVar","'fetchFromBook' is defined but never used.","'Header' is defined but never used.","'SideBar' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'classes' is assigned a value but never used.","'profileMock' is assigned a value but never used.","'profilesAPI' is defined but never used.","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"359","text":"360"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",{"range":"361","text":"360"},"'friendsMock' is assigned a value but never used.",{"range":"362","text":"360"},{"range":"363","text":"360"},{"range":"364","text":"360"},{"range":"365","text":"360"},{"range":"366","text":"360"},{"range":"367","text":"360"},{"range":"368","text":"360"},"'useStyles' is assigned a value but never used.",{"range":"369","text":"360"},"no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray",{"range":"370","text":"360"},"no-global-assign","no-unsafe-negation",[-1,0],"",[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0]]