[{"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\index.js":"1","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\reportWebVitals.js":"2","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\App.js":"3","D:\\dev\\BookRecipes\\bookrecipes.webapi\\client\\src\\index.js":"4","D:\\dev\\BookRecipes\\bookrecipes.webapi\\client\\src\\components\\App.js":"5","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Footer\\Footer.js":"6","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Header\\Header.js":"7","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\IngredientsContainer.js":"8","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Ingredients\\Ingredients.js":"9","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Ingredients\\Ingredient.js":"10","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\SideBar\\SideBar.js":"11","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\RecipeContainer.js":"12","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Recipes\\Recipe.js":"13","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\RecipesContainer.js":"14","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Recipes\\Recipes.js":"15","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\SideBarContainer.js":"16","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\ProfileContainer.js":"17","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Profile\\Profile.js":"18","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\common\\Login.js":"19","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\DAL\\api.js":"20","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\ingredientAction.js":"21","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\ingredientsAction.js":"22","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\actionTypes.js":"23","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\profileAction.js":"24","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\store\\index.js":"25","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\index.js":"26","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\ingredientReducer.js":"27","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\ingredientsReducer.js":"28","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\profileReducer.js":"29","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\MessagesContainer.js":"30","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\Messages.js":"31","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\messagesReducer.js":"32","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\messagesAction.js":"33","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\SideBar\\SideBar.js":"34","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\Chat\\Chat.js":"35","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\Chat\\ChatDisplayer\\ChatDisplayer.js":"36","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\Chat\\Header\\Header.js":"37","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\Chat\\MessageCreator\\MessageCreator.js":"38","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\Notes\\Notes.js":"39","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\SideBar\\Friends\\Friends.js":"40","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\postsReducer.js":"41","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\postsAction.js":"42","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\profilesMock.js":"43","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\friendsAction.js":"44","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\friendsReducer.js":"45","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\informatorReducer.js":"46","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\FriendsContainer.js":"47","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Friends\\Friends.js":"48","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\hoc\\withAuthUser.js":"49","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\hoc\\withFriends.js":"50","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\utiles\\ReduxMUIForms\\InputReduxMUI.js":"51","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\utiles\\ReduxMUIForms\\CheckboxReduxMUI.js":"52","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\Chat\\MessageCreator\\MessageForm\\MessageForm.js":"53","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Profile\\PostsWall\\PostsWall.js":"54","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Profile\\PostsWall\\Posts\\Posts.js":"55","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Profile\\PostsWall\\PostForm\\PostForm.js":"56","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Profile\\Friends\\Friends.js":"57","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\ChatContainer.js":"58","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\loginReducer.js":"59","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\LoginContainer.js":"60","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\loginAction.js":"61","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\utiles\\vaildators\\validators.js":"62","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\utiles\\selectors\\selectors.js":"63","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\RouteComponent.js":"64","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Profile\\Description\\Description.js":"65","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Profile\\Gallery\\Gallery.js":"66","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Profile\\MyRecipes\\MyRecipes.js":"67","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\DAL\\profile-api.js":"68","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\DAL\\auth-api.js":"69","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\DAL\\posts-api.js":"70","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\DAL\\friends-api.js":"71","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\PostsContainer.js":"72","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\ProfileFriendsContainer.js":"73","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\DAL\\messages-api.js":"74","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\DAL\\hub\\chathub.js":"75"},{"size":731,"mtime":1614629920057,"results":"76","hashOfConfig":"77"},{"size":362,"mtime":499162500000,"results":"78","hashOfConfig":"77"},{"size":1515,"mtime":1614629919859,"results":"79","hashOfConfig":"77"},{"size":484,"mtime":1610879481612,"results":"80","hashOfConfig":"81"},{"size":387,"mtime":1610829940396,"results":"82","hashOfConfig":"81"},{"size":1457,"mtime":1614629919867,"results":"83","hashOfConfig":"77"},{"size":1276,"mtime":1614629919879,"results":"84","hashOfConfig":"77"},{"size":1867,"mtime":1614629920013,"results":"85","hashOfConfig":"77"},{"size":1229,"mtime":1614629919891,"results":"86","hashOfConfig":"77"},{"size":1844,"mtime":1614629919886,"results":"87","hashOfConfig":"77"},{"size":1189,"mtime":1614629919987,"results":"88","hashOfConfig":"77"},{"size":1437,"mtime":1614629920031,"results":"89","hashOfConfig":"77"},{"size":2382,"mtime":1614629919975,"results":"90","hashOfConfig":"77"},{"size":825,"mtime":1614629920037,"results":"91","hashOfConfig":"77"},{"size":671,"mtime":1614629919980,"results":"92","hashOfConfig":"77"},{"size":919,"mtime":1614629920043,"results":"93","hashOfConfig":"77"},{"size":2212,"mtime":1615048596960,"results":"94","hashOfConfig":"77"},{"size":2561,"mtime":1615048641048,"results":"95","hashOfConfig":"77"},{"size":2897,"mtime":1614881618475,"results":"96","hashOfConfig":"77"},{"size":292,"mtime":1614874684223,"results":"97","hashOfConfig":"77"},{"size":913,"mtime":1614629919757,"results":"98","hashOfConfig":"77"},{"size":863,"mtime":1614629919758,"results":"99","hashOfConfig":"77"},{"size":2644,"mtime":1615137190321,"results":"100","hashOfConfig":"77"},{"size":1180,"mtime":1614882560222,"results":"101","hashOfConfig":"77"},{"size":719,"mtime":1614629919859,"results":"102","hashOfConfig":"77"},{"size":818,"mtime":1614629919803,"results":"103","hashOfConfig":"77"},{"size":888,"mtime":1614629919817,"results":"104","hashOfConfig":"77"},{"size":956,"mtime":1614629919823,"results":"105","hashOfConfig":"77"},{"size":1406,"mtime":1614874896328,"results":"106","hashOfConfig":"77"},{"size":1092,"mtime":1615060477514,"results":"107","hashOfConfig":"77"},{"size":1347,"mtime":1615039131264,"results":"108","hashOfConfig":"77"},{"size":5253,"mtime":1615137367345,"results":"109","hashOfConfig":"77"},{"size":1996,"mtime":1615151641617,"results":"110","hashOfConfig":"77"},{"size":2330,"mtime":1614629919949,"results":"111","hashOfConfig":"77"},{"size":1322,"mtime":1615061748199,"results":"112","hashOfConfig":"77"},{"size":1178,"mtime":1615040939592,"results":"113","hashOfConfig":"77"},{"size":1396,"mtime":1614629919905,"results":"114","hashOfConfig":"77"},{"size":689,"mtime":1614629919917,"results":"115","hashOfConfig":"77"},{"size":596,"mtime":1614629919935,"results":"116","hashOfConfig":"77"},{"size":2358,"mtime":1615035616054,"results":"117","hashOfConfig":"77"},{"size":3436,"mtime":1615043995207,"results":"118","hashOfConfig":"77"},{"size":1768,"mtime":1615153794653,"results":"119","hashOfConfig":"77"},{"size":2301,"mtime":1614629919852,"results":"120","hashOfConfig":"77"},{"size":1739,"mtime":1614890364415,"results":"121","hashOfConfig":"77"},{"size":1346,"mtime":1614890383997,"results":"122","hashOfConfig":"77"},{"size":1445,"mtime":1614629919809,"results":"123","hashOfConfig":"77"},{"size":1402,"mtime":1615034861774,"results":"124","hashOfConfig":"77"},{"size":1821,"mtime":1615034920154,"results":"125","hashOfConfig":"77"},{"size":760,"mtime":1614893707668,"results":"126","hashOfConfig":"77"},{"size":1482,"mtime":1614891939024,"results":"127","hashOfConfig":"77"},{"size":940,"mtime":1614880210566,"results":"128","hashOfConfig":"77"},{"size":226,"mtime":1614629920095,"results":"129","hashOfConfig":"77"},{"size":1491,"mtime":1614629919924,"results":"130","hashOfConfig":"77"},{"size":675,"mtime":1615051895409,"results":"131","hashOfConfig":"77"},{"size":2051,"mtime":1615042829955,"results":"132","hashOfConfig":"77"},{"size":1725,"mtime":1614629919961,"results":"133","hashOfConfig":"77"},{"size":1700,"mtime":1615031381544,"results":"134","hashOfConfig":"77"},{"size":1805,"mtime":1615194996121,"results":"135","hashOfConfig":"77"},{"size":925,"mtime":1614881688100,"results":"136","hashOfConfig":"77"},{"size":1385,"mtime":1614880621343,"results":"137","hashOfConfig":"77"},{"size":1378,"mtime":1614880062690,"results":"138","hashOfConfig":"77"},{"size":483,"mtime":1614629920119,"results":"139","hashOfConfig":"77"},{"size":1193,"mtime":1614890555267,"results":"140","hashOfConfig":"77"},{"size":1322,"mtime":1615032978583,"results":"141","hashOfConfig":"77"},{"size":3049,"mtime":1614629919951,"results":"142","hashOfConfig":"77"},{"size":1122,"mtime":1614629919954,"results":"143","hashOfConfig":"77"},{"size":1126,"mtime":1614629919954,"results":"144","hashOfConfig":"77"},{"size":277,"mtime":1614874545178,"results":"145","hashOfConfig":"77"},{"size":311,"mtime":1614875220285,"results":"146","hashOfConfig":"77"},{"size":559,"mtime":1615153730369,"results":"147","hashOfConfig":"77"},{"size":298,"mtime":1614883417916,"results":"148","hashOfConfig":"77"},{"size":1460,"mtime":1615154250253,"results":"149","hashOfConfig":"77"},{"size":1123,"mtime":1615034991117,"results":"150","hashOfConfig":"77"},{"size":600,"mtime":1615149712605,"results":"151","hashOfConfig":"77"},{"size":1054,"mtime":1615153346562,"results":"152","hashOfConfig":"77"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},"hlthki",{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"11vlfv1",{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"155"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"155"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"155"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"155"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"210","usedDeprecatedRules":"155"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"219","usedDeprecatedRules":"155"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"222","usedDeprecatedRules":"155"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"225","usedDeprecatedRules":"155"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"155"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"231","usedDeprecatedRules":"155"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"234","usedDeprecatedRules":"155"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"237","usedDeprecatedRules":"155"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"240","usedDeprecatedRules":"155"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"245","usedDeprecatedRules":"155"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"248","usedDeprecatedRules":"155"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"155"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"155"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"155"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"155"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"155"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"155"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"155"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"326","usedDeprecatedRules":"155"},"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\index.js",[],["327","328"],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\reportWebVitals.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\App.js",[],"D:\\dev\\BookRecipes\\bookrecipes.webapi\\client\\src\\index.js",["329","330"],"D:\\dev\\BookRecipes\\bookrecipes.webapi\\client\\src\\components\\App.js",["331","332"],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Footer\\Footer.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Header\\Header.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\IngredientsContainer.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Ingredients\\Ingredients.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Ingredients\\Ingredient.js",["333"],"import React from 'react';\nimport PropTypes from 'prop-types'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Typography, Button, Tooltip } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n    ingredientPhoto: {\n        width: 200,\n        height:200\n    }\n});\n\n\nconst Ingredient = (props) => {\n\n    const classes = useStyles();\n\n    const CurrentInform = () => (\n        <div>\n            <span><Typography>{props.id}. {props.name}. You have {props.ingredientsInRecipe.length} recipes with this ingredients.</Typography></span>\n            <span><img alt={props.name} className={classes.ingredientPhoto} src=\"https://source.unsplash.com/random\" /></span>\n            <span>\n                <ul>\n                    {\n                        props.ingredientsInRecipe.map((recipe) => {\n                            <li key={recipe.id}>Recipe - {recipe.recipeId}. Count this ingredients - {recipe.countIngredient}</li>\n                        })\n                    }\n                </ul>\n            </span>\n        </div>    \n        )\n\n        return (\n            <li>\n                <Tooltip title={CurrentInform()} placement=\"right-start\">\n                    <Button><Typography>{props.name}.</Typography></Button>\n                </Tooltip>\n            </li>\n        )\n}\n\nIngredient.propTypes = {\n    name: PropTypes.string.isRequired,\n    ingredientsInRecipe: PropTypes.arrayOf(\n        PropTypes.shape({\n            countIngredient: PropTypes.string.isRequired,\n            recipeId: PropTypes.number.isRequired,\n            ingredientId: PropTypes.number.isRequired\n        }).isRequired\n    ).isRequired\n    //id: PropTypes.number.isRequired,\n    //getIngredient: PropTypes.func.isRequired\n}\n\nexport default Ingredient;\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\SideBar\\SideBar.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\RecipeContainer.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Recipes\\Recipe.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\RecipesContainer.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Recipes\\Recipes.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\SideBarContainer.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\ProfileContainer.js",["334"],"import React, {Component} from 'react'  \r\nimport { connect } from 'react-redux'\r\nimport { getUserPosts} from '../Redux/actions/postsAction'\r\nimport Profile from '../components/Profile/Profile'\r\nimport { compose } from 'redux'\r\nimport { withAuthUser } from '../hoc/withAuthUser'\r\nimport { getFriendsClipInfo, getProfile, getProfileIsFetching} from '../utiles/selectors/selectors'\r\nimport { getUserFriends } from '../Redux/actions/friendsAction'\r\nimport { getProfile as getProfileActionCreator} from '../Redux/actions/profileAction'\r\n\r\nclass ProfileContainer extends Component {\r\n\r\n    getUser() {\r\n        return this.props.match.params.userId ? this.props.match.params.userId : this.props.loginUserId\r\n    }\r\n\r\n    refreshUser() {\r\n        const userId = this.getUser()\r\n        if (userId) {\r\n            this.props.getProfile(userId);\r\n            this.props.getUserPosts(userId);\r\n            this.props.getUserFriends(userId);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshUser()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.loginUserId !== this.props.loginUserId) {\r\n            this.refreshUser()\r\n        } else if (prevProps.match.params.userId !== this.props.match.params.userId) {\r\n            this.refreshUser()\r\n        }\r\n    }\r\n\r\n    profile = () => {\r\n        return <Profile\r\n            loginUserId={this.props.loginUserId}\r\n            profile={this.props.profile}\r\n        /> \r\n    }\r\n\r\n    loading = () => {\r\n        return <div>\"loading\"</div>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            !this.props.profile ? this.loading() : this.profile()\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        profile: getProfile(state),\r\n        isFetching: getProfileIsFetching(state),\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getUserFriends: (userId) => (dispatch(getUserFriends(userId))),\r\n        getProfile: (userId) => (dispatch(getProfileActionCreator(userId))),\r\n        getUserPosts: (userId) => (dispatch(getUserPosts(userId))),\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthUser,\r\n)(ProfileContainer)\r\n ","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Profile\\Profile.js",["335"],"import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Grid, Avatar } from '@material-ui/core';\r\n\r\nimport PostsWall from './PostsWall/PostsWall'\r\nimport Description from './Description/Description';\r\nimport Gallery from './Gallery/Gallery';\r\nimport MyRecipes from './MyRecipes/MyRecipes';\r\nimport ProfileFriendsContainer from '../../containers/ProfileFriendsContainer';\r\nimport PostsContainer from '../../containers/PostsContainer';\r\n\r\nconst useStyles = makeStyles({\r\n    list: {\r\n        width: 250,\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n    rounded: {\r\n        width: 300,\r\n        height:300\r\n    },\r\n});\r\n\r\nconst Profile = (props) => {\r\n    const classes = useStyles();\r\n\r\n    //TODO: push status on store\r\n    \r\n        return (\r\n            <>\r\n                <Grid container>\r\n                    <Grid container item>\r\n                        <Grid container item md={4}>\r\n                            <Avatar variant=\"rounded\" className={classes.rounded}>\r\n                                <img alt=\"avatar\" src={props.profile.photos.largePhoto} />\r\n                                N\r\n                            </Avatar>\r\n                        </Grid>\r\n                        <Grid direction=\"column\" container item md={8}>\r\n                            <Description name={props.profile.name} description={props.profile.description} userStatus={props.profile.status} />            \r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container>\r\n                        <Grid direction=\"column\" container item xs={12} lg={6}>\r\n                            <Grid container>\r\n                                <Grid item xs={12} lg={12}>\r\n                                    <ProfileFriendsContainer userId={props.profile.id}/>\r\n                                </Grid>\r\n                                <Grid item xs={6} lg={12}>\r\n                                    <Gallery />\r\n                                </Grid>\r\n                                <Grid item xs={6} lg={12}>\r\n                                    <MyRecipes />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container item xs={12} lg={6}>\r\n                            <PostsContainer loginUserId={props.loginUserId} userId={props.profile.id} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </>\r\n        )\r\n}\r\n\r\nexport default Profile;\r\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\common\\Login.js",["336","337","338"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Button, Typography, Tooltip } from '@material-ui/core';\nimport { Field, reduxForm } from 'redux-form';\nimport InputReduxMUI from '../../utiles/ReduxMUIForms/InputReduxMUI';\nimport CheckboxReduxMUI from '../../utiles/ReduxMUIForms/CheckboxReduxMUI';\nimport { maxLengthCreator, minLengthCreator, required } from '../../utiles/vaildators/validators';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        /*minHeight: '100vh',*/\n    },\n    footer: {\n        padding: theme.spacing(3, 2),\n        marginTop: 'auto',\n        backgroundColor:\n            theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\n    },\n}));\n\nconst minLength3 = minLengthCreator(3)\nconst maxLength30 = maxLengthCreator(30)\n\nlet LoginForm = (props) => {\n    const classes = useStyles();\n    return (\n        <>\n            <form onSubmit={props.handleSubmit}>\n                <Grid direction=\"row\" container>\n                    <Grid container item >Login</Grid>\n                    <Grid container item >\n                        <Field name={\"login\"} type=\"input\" component={InputReduxMUI} label=\"Login\"\n                            validate={[required, minLength3]} />\n                    </Grid>\n\n                    <Grid container item >Password</Grid>\n                    <Grid container item >\n                        <Field name={\"fieldPassword\"} component={InputReduxMUI} label=\"Password\"\n                            validate={[required, maxLength30]} type=\"password\"/>\n                    </Grid>\n\n                    <Grid container item >\n                        <Grid container item md={7}>\n                            <Field name={\"remember me\"} type=\"checkbox\" component={CheckboxReduxMUI} />\n                            <Typography>Remember me</Typography>\n                        </Grid>\n\n                        <Grid container item md={5}>\n                            <Field name={\"submit\"} type=\"submit\" component={Button}>\n                                Log In\n                            </Field>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n            </form>\n        </>\n    );\n}\n\nlet LoginReduxForm = reduxForm({\n    form: 'login'\n})(LoginForm)\n\nlet Login = (props) => {\n    const classes = useStyles();\n    const errorMessages = () => <Typography color=\"secondary\">{props.errorMessage}</Typography>\n\n    return (\n        <>\n            {props.errorMessage ?\n                <Tooltip title={props.errorMessage} placement=\"right-start\" open>\n                    <div><LoginReduxForm onSubmit={props.onSubmit} /></div>\n                </Tooltip>:\n                <LoginReduxForm onSubmit={props.onSubmit} />\n            }\n        </>\n    );\n}\n\nexport default Login;","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\DAL\\api.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\ingredientAction.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\ingredientsAction.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\actionTypes.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\profileAction.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\store\\index.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\index.js",["339"],"﻿import { combineReducers } from 'redux'\nimport friendsReducer from './friendsReducer'\nimport ingredientReducer from './ingredientReducer'\nimport ingredientsReducer from './ingredientsReducer'\nimport messagesReducer from './messagesReducer'\nimport postsReducer from './postsReducer'\nimport profileReducer from './profileReducer'\nimport informatorReducer from './informatorReducer'\nimport { reducer as formReducer } from 'redux-form' \nimport loginReducer from './loginReducer'\n\nconst rootReducer = combineReducers({\n    form: formReducer,\n    ingredient: ingredientReducer,\n    ingredients: ingredientsReducer,\n    profiles: profileReducer,\n    messages: messagesReducer,\n    posts: postsReducer,\n    friends: friendsReducer,\n    informator: informatorReducer,\n    login: loginReducer\n})\n\nexport default rootReducer;\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\ingredientReducer.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\ingredientsReducer.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\profileReducer.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\MessagesContainer.js",["340","341","342"],"﻿import React, { useEffect} from 'react'  \r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport Messages from '../components/Messages/Messages'\r\nimport { withAuthUser } from '../hoc/withAuthUser'\r\nimport { getUserFriends } from '../Redux/actions/friendsAction'\r\nimport { getFriendsClipInfo, getFriendsId } from '../utiles/selectors/selectors'\r\n\r\nconst MessagesContainer  = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.getUserFriends(props.loginUserId);\r\n    }, [props.loginUserId]);\r\n\r\n\r\n    const messages = () => <Messages {...props} />\r\n    const loading = () => <div>\"Loading\"</div>\r\n\r\n    return !props.friends ? loading() : messages();\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        friends: getFriendsId(state),\r\n        /*friends: getFriendsClipInfo(state),*/\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getUserFriends: (userId) => (dispatch(getUserFriends(userId)))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthUser\r\n)(MessagesContainer)\r\n ","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\Messages.js",["343"],"﻿import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Grid} from '@material-ui/core';\n\nimport SideBar from './SideBar/SideBar';\nimport { Route } from 'react-router-dom';\nimport Notes from './Notes/Notes';\nimport ChatContainer from '../../containers/ChatContainer';\n\n\nconst useStyles = makeStyles((theme) => ({\n    friendsBar: {\n        backgroundColor: \"#e57373\",\n    },\n    fullList: {\n        width: 'auto',\n    },\n    notes: {\n        height: 60,\n        borderRadius: '100%',\n        border: 'inset'\n    }\n}));\n\nconst Messages = (props) => {\n    const classes = useStyles();\n\n        return (\n            <>\n                <Grid container >\n                    <Grid container item md={8} >\n                        <Route path=\"/messages\" exact>\n                            <Notes/>\n                        </Route>\n                        <Route path=\"/messages/chat/:userId\" exact>\n                            <ChatContainer loginUserId={props.loginUserId} addMessage={props.addMessage} />\n                        </Route>\n                    </Grid>\n                    <Grid className={classes.friendsBar} container item md={4}>\n                        <SideBar friends={props.friends} /> \n                    </Grid>\n                </Grid>\n            </>\n        )\n}\n\nexport default Messages;\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\messagesReducer.js",["344","345"],"﻿import {\n    GET_NEW_MESSAGE,\n    ADD_MESSAGE_TO_FRIEND_REQUEST,\n    ADD_MESSAGE_TO_FRIEND_SUCCESS,\n    ADD_MESSAGE_TO_FRIEND_ERROR,\n    GET_FRIEND_MESSAGES_REQUEST,\n    GET_FRIEND_MESSAGES_SUCCESS,\n    GET_FRIEND_MESSAGES_ERROR\n} from '../actions/actionTypes'\n\nconst initialState = {\n    id: 0,\n    userId: null,\n    messages: [\n        {\n            id: 0,\n            text: \"Hej, jak dzisiaj siebie czujesz ?\",\n            isMe: false,\n            isChange: false,\n            dataCreated: {\n                data: \"20.02.2021\",\n                time: \"20:32\"\n            }\n        },\n        {\n            id: 1,\n            text: \"Mam do Ciebe pytanie.\",\n            isMe: false,\n            isChange: false,\n            dataCreated: {\n                data: \"20.02.2021\",\n                time: \"20:32\"\n            }\n        },\n        {\n            id: 2,\n            text: \"Czeszcz, Jacek. Wszystko dobrze\",\n            isMe: true,\n            isChange: true,\n            dataCreated: {\n                data: \"20.02.2021\",\n                time: \"20:42\"\n            }\n        },\n        {\n            id: 3,\n            text: \"Co się stało ?\",\n            isMe: true,\n            isChange: false,\n            dataCreated: {\n                data: \"20.02.2021\",\n                time: \"20:43\"\n            }\n        }\n    ]\n}\n\nlet messagesMock = [\n    {\n        id: 0,\n        userId: 0,\n        messages: [\n            {\n                id: 0,\n                text: \"Hej, jak dzisiaj siebie czujesz ?\",\n                isMe: false,\n                isChange: false,\n                dataCreated: {\n                    data: \"20.02.2021\",\n                    time: \"20:32\"\n                }\n            },\n            {\n                id: 1,\n                text: \"Mam do Ciebe pytanie.\",\n                isMe: false,\n                isChange: false,\n                dataCreated: {\n                    data: \"20.02.2021\",\n                    time: \"20:32\"\n                }\n            },\n            {\n                id: 2,\n                text: \"Czeszcz, Jacek. Wszystko dobrze\",\n                isMe: true,\n                isChange: true,\n                dataCreated: {\n                    data: \"20.02.2021\",\n                    time: \"20:42\"\n                }\n            },\n            {\n                id: 3,\n                text: \"Co się stało ?\",\n                isMe: true,\n                isChange: false,\n                dataCreated: {\n                    data: \"20.02.2021\",\n                    time: \"20:43\"\n                }\n            }\n        ],\n    },\n    {\n        id: 1,\n        userId: 1,\n        messages: [\n            {\n                id: 0,\n                text: \"Cześć, co slychać?\",\n                isMe: false,\n                isChange: false,\n                dataCreated: {\n                    data: \"20.02.2021\",\n                    time: \"20:32\"\n                }\n            },\n            {\n                id: 1,\n                text: \"I'm fine, you ?\",\n                isMe: true,\n                isChange: false,\n                dataCreated: {\n                    data: \"20.02.2021\",\n                    time: \"20:32\"\n                }\n            }\n        ],\n    },\n    {\n        id: 2,\n        userId: 2,\n        messages: [\n            {\n                id: 0,\n                text: \"You know, I'm God!\",\n                isMe: false,\n                isChange: false,\n                dataCreated: {\n                    data: \"20.02.2021\",\n                    time: \"20:32\"\n                }\n            },\n            {\n                id: 1,\n                text: \"Okay ...dude\",\n                isMe: true,\n                isChange: false,\n                dataCreated: {\n                    data: \"20.02.2021\",\n                    time: \"20:32\"\n                }\n            },\n            {\n                id: 2,\n                text: \"No, I'm God!\",\n                isMe: false,\n                isChange: false,\n                dataCreated: {\n                    data: \"20.02.2021\",\n                    time: \"20:32\"\n                }\n            }\n        ],\n    },\n    {\n        id: 3,\n        userId: 3,\n        messages: [\n            {\n                id: 0,\n                text: \"Where is Subzero ?!\",\n                isMe: false,\n                isChange: false,\n                dataCreated: {\n                    data: \"20.02.2021\",\n                    time: \"20:32\"\n                }\n            }\n        ],\n    }\n]\n\nexport default function messagesReducer(state = initialState, action) {\n    switch (action.type) {\n        case ADD_MESSAGE_TO_FRIEND_REQUEST:\n            return { ...state }\n        case ADD_MESSAGE_TO_FRIEND_SUCCESS:\n            return { ...state }\n        case ADD_MESSAGE_TO_FRIEND_ERROR:\n            return { ...state, error: action.error }\n        case GET_FRIEND_MESSAGES_REQUEST:\n            return {...state}\n        case GET_FRIEND_MESSAGES_SUCCESS:\n            return {...state,messages: action.messages}\n        case GET_FRIEND_MESSAGES_ERROR:\n            return { ...state, error: action.error }\n        case GET_NEW_MESSAGE:\n            return { ...state, messages: [...state.messages, action.message] }\n        default:\n            return state\n    }\n}\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\messagesAction.js",["346"],"import {\n    ADD_MESSAGE_TO_FRIEND_REQUEST,\n    ADD_MESSAGE_TO_FRIEND_SUCCESS,\n    ADD_MESSAGE_TO_FRIEND_ERROR,\n    GET_FRIEND_MESSAGES_REQUEST,\n    GET_FRIEND_MESSAGES_SUCCESS,\n    GET_FRIEND_MESSAGES_ERROR,\n}\n    from './actionTypes'\n\nimport { messagesAPI } from '../../DAL/messages-api'\n\nexport function requestFriendMessages() {\n    return {\n        type: GET_FRIEND_MESSAGES_REQUEST\n    }\n}\n\nexport function receiveFriendMessages(messages) {\n    return {\n        type: GET_FRIEND_MESSAGES_SUCCESS,\n        messages: messages\n    }\n}\n\nexport function errorFriendMessages(error) {\n    return {\n        type: GET_FRIEND_MESSAGES_ERROR,\n        error: error\n    }\n}\n\nexport function requestAddMessage() {\n    return {\n        type: ADD_MESSAGE_TO_FRIEND_REQUEST\n    }\n}\n\nexport function receiveAddMessage() {\n    return {\n        type: ADD_MESSAGE_TO_FRIEND_SUCCESS\n    }\n}\n\nexport function failedAddMessage(error) {\n    return {\n        type: ADD_MESSAGE_TO_FRIEND_ERROR,\n        error: error\n    }\n}\n\n\n//��������� ������\n\nexport function addMessage(currentUserId, friendId, message, conectionId) {\n    return async (dispatch) => {\n        dispatch(requestAddMessage())\n\n        try {\n            var response = await messagesAPI.postMessage(currentUserId, friendId, message, conectionId);\n            \n            //chathubConnection.invoke(\"Send\", response);\n            dispatch(receiveAddMessage())\n            /*chathubConnection.on(\"Send\", function (data) {\n                console.log(data);\n            });*/\n        } catch (error) {\n            dispatch(failedAddMessage(error))\n        }\n    }\n}\n\nexport function getFriendMessages(currentUserId, friendId) {\n    return async (dispatch) => {\n        dispatch(requestFriendMessages())\n\n        try {\n            var response = await messagesAPI.getMessages(currentUserId, friendId);\n            dispatch(receiveFriendMessages(response.data))\n        } catch (error) {\n            dispatch(errorFriendMessages(error))\n        }\n    }\n}\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\SideBar\\SideBar.js",["347"],"﻿import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Grid, Button,  InputBase, Icon, MenuList, MenuItem} from '@material-ui/core';\n\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport Friends from './Friends/Friends';\n\n\nconst useStyles = makeStyles((theme) => ({\n    friendsBar: {\n        backgroundColor: theme.palette.grey[500],\n    },\n    linkText: {\n        textDecoration: \"none\",\n        color : \"black\"\n    },\n    notesIcon: {\n        color: \"#388e3c\",\n    },\n    notesButton: {\n        height: 60,\n        borderRadius: '100%',\n        border: 'inset',\n        borderColor: \"green\"\n\n    },\n    friendAvatar: {\n        anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'left',\n        }\n    },\n    searchInput: {\n        width: \"100%\",\n        height: \"auto\"\n    }\n}));\n\nconst SideBar= (props) => {\n    const classes = useStyles();\n\n        return (\n            <>\n                <Grid direction=\"column\" container item>\n                    <MenuList>\n                        <MenuItem>\n                            <Grid direction=\"column\" container item alignItems=\"stretch\">\n                                <InputBase\n                                    className={'searchInput'}\n                                    placeholder={'Search...'}\n                                    startAdornment={<Icon>search</Icon>}\n                                />\n                            </Grid>\n                        </MenuItem>\n\n                        <MenuItem className={classes.buttonNavigation}>\n                            <Grid container item>\n                                <NavLink to=\"/messages\" className={classes.linkText}>\n                                    <span>NOTES</span>\n                                    <Button className={classes.notesButton}>\n                                        <BookmarkBorderIcon className={classes.notesIcon} />\n                                    </Button>\n                                </NavLink>\n                            </Grid>\n                        </MenuItem>\n\n                        <Friends friends={props.friends} />\n\n                    </MenuList>\n                </Grid>\n            </>\n        )\n}\n\nexport default SideBar;\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\Chat\\Chat.js",["348","349"],"﻿import React, { useEffect } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport MessageCreator from './MessageCreator/MessageCreator';\nimport ChatDisplayer from './ChatDisplayer/ChatDisplayer';\nimport Header from './Header/Header';\nimport { Divider, Grid} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        /*flexGrow: 1,*/\n    },\n    paper: {\n        width: \"100%\",\n        height: \"100%\"\n    }\n}));\n\n/*const wsChannel = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx');   //wss://bookOfRecipes.com/handlers/ChatHandler.ashx \n*/\nconst Chat = ({ messages, onSubmit }) => {\n\n    const classes = useStyles();\n\n    /*\n    useEffect(() => {\n        wsChannel.addEventListener('message', (e) => {\n            console.log(JSON.parse(e))\n        })\n    }, []);*/\n\n    return (\n        <Grid className={classes.root} container >\n            <Grid container item>\n                <Header />\n                <Divider />\n            </Grid>\n            <Grid container item>\n                <ChatDisplayer messages={messages} />\n            </Grid>\n            <Grid container item>\n                <Divider />\n                <MessageCreator onSubmit={onSubmit} />\n            </Grid>\n        </Grid>\n        )\n}\n\nexport default Chat;\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\Chat\\ChatDisplayer\\ChatDisplayer.js",["350"],"﻿import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Grid, Typography, Paper } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    bg: {\n    },\n    paper: {\n        backgroundColor: theme.palette.grey[300],\n        width: \"100%\",\n    }\n}));\n\nconst ChatDisplayer = (props) => {\n    const classes = useStyles();\n\n        return (\n            <>\n                {\n                    props.messages.map((message) => (\n                        <Grid key={message.id} container item justify={message.isMe ? \"flex-end\" : \"flex-start\"}>\n                            {/*<Typography>{message.isChange ? \"Changed\": null}</Typography>\n                                    <Typography>{message.dataCreated.data} {message.dataCreated.time}</Typography>*/}\n                            <Paper className={classes.bg}>\n                                <Typography>\n                                    {message.message}\n                                </Typography>\n                            </Paper>\n                        </Grid>\n                    ))\n                }\n            </>\n        )\n}\n\nexport default ChatDisplayer;\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\Chat\\Header\\Header.js",["351"],"﻿import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Grid, Avatar, Chip, IconButton} from '@material-ui/core';\n\nimport LocalPhoneIcon from '@material-ui/icons/LocalPhone';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport VideoCallIcon from '@material-ui/icons/VideoCall';\n\nconst useStyles = makeStyles((theme) => ({\n    \n    root: {\n    }\n}));\n\nconst Header = (props) => {\n    const classes = useStyles();    \n        return (\n            <>\n                <Grid className={classes.root} container item justify=\"flex-start\" alignItems=\"center\" md={6}>\n                    <IconButton size=\"small\" color=\"primary\" >\n                        <MoreVertIcon />\n                    </IconButton>\n                    <IconButton size=\"small\" color=\"primary\" aria-label=\"send\">\n                        <VideoCallIcon />\n                    </IconButton>\n                    <IconButton size=\"small\" color=\"primary\" aria-label=\"send\">\n                        <LocalPhoneIcon />\n                    </IconButton>\n                </Grid>\n                <Grid container item justify=\"flex-end\" alignItems=\"center\" md={6}>\n                    <Chip label=\"Online\" color=\"secondary\" />\n                    <Avatar alt=\"Remy Sharp\" src=\"https://source.unsplash.com/random\" />\n                </Grid>\n            </>\n        )\n}\n\nexport default Header;\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\Chat\\MessageCreator\\MessageCreator.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\Notes\\Notes.js",["352","353"],"﻿import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Typography } from '@material-ui/core';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    friendsBar: {\n        backgroundColor: theme.palette.grey[500],\n    },\n    fullList: {\n        width: 'auto',\n    },\n    notes: {\n        height: 60,\n        borderRadius: '100%',\n        border: 'inset'\n    }\n}));\n\nconst Notes = (props) => {\n    /*const classes = useStyles();*/\n\n        return (\n            <>\n                <Typography>Notes</Typography>\n            </>\n        )\n}\n\nexport default Notes;\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\SideBar\\Friends\\Friends.js",["354"],"﻿import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {Typography, Avatar, Badge, MenuItem } from '@material-ui/core';\n\nimport MailIcon from '@material-ui/icons/Mail';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        /*marginRight: theme.spacing(2),*/\n        /*width: \"auto\"*/\n    },\n    linkText: {\n        textDecoration: \"none\",\n        color : \"black\"\n    },\n    notesIcon: {\n        color: \"#388e3c\",\n    },\n    notesButton: {\n        height: 60,\n        borderRadius: '100%',\n        border: 'inset',\n        borderColor: \"green\"\n\n    },\n    friendAvatar: {\n        anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'left',\n        }\n    },\n    buttonNavigation: {\n        borderRadius: \"5px 0 0 5px\",\n    }\n}));\n\nconst Friends = (props) => {\n    const classes = useStyles();\n\n        return (\n            <>\n                {props.friends.map((friend) => (\n                    <NavLink key={friend.id} to={\"/messages/chat/\" + friend.id} className={classes.linkText}>\n                        <MenuItem className={classes.buttonNavigation}>\n                            <Badge color=\"secondary\" badgeContent={friend.newMessages}>\n                                <MailIcon />\n                            </Badge>\n                            <Badge>\n                                <Typography>{friend.name}</Typography>\n                            </Badge>\n                            <Badge>\n                                <Avatar alt={friend.name} src={friend.photos.smallPhoto} />\n                            </Badge>\n                        </MenuItem>\n                    </NavLink>\n                ))}\n            </>\n        )\n}\n\n/*{\n    props.friends.map((friend) => (\n        <Grid container item justify=\"flex-end\">\n            <NavLink to=\"/messages/chat\" className={classes.linkText}>\n                <Badge color=\"secondary\" badgeContent={friend.newMessages}>\n                    <MailIcon />\n                </Badge>\n                <Badge>\n                    <Typography>{friend.name}</Typography>\n                </Badge>\n                <Badge>\n                    <Avatar alt={friend.name} src={friend.photo} />\n                </Badge>\n            </NavLink>\n        </Grid>\n    ))\n}*/\nexport default Friends;\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\postsReducer.js",["355"],"import {\n    ADD_POST_TO_PROFILE_REQUEST,\n    ADD_POST_TO_PROFILE_SUCCESS,\n    ADD_POST_TO_PROFILE_ERROR,\n    GET_USER_POSTS_REQUEST,\n    GET_USER_POSTS_SUCCESS,\n    GET_USER_POSTS_ERROR\n\n} from '../actions/actionTypes'\n\n\nconst initialState = {\n    id: 0,\n    userId: null,\n    posts: [\n        {\n            id: 0,\n            title: \"Tonight I'm cooked some fine cake!\",\n            main: \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\",\n            photo: \"https://source.unsplash.com/random\"\n        }\n    ]\n}\n\nlet postsMock = [\n    {\n        id: 0,\n        userId: 0,\n        posts: [\n            {\n                id: 0,\n                title: \"Tonight I'm cooked some fine cake!\",\n                main: \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\",\n                photo: \"https://source.unsplash.com/random\"\n            },\n            {\n                id: 1,\n                title: \"Some photo for you! Duddde\",\n                main: \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\",\n                photo: \"https://source.unsplash.com/random\"\n            }\n        ],\n    },\n    {\n        id: 1,\n        userId: 1,\n        posts: [\n            {\n                id: 0,\n                title: \"SnowFlakes!\",\n                main: \"It's so beautiful\",\n                photo: \"https://source.unsplash.com/random\"\n            },\n            {\n                id: 1,\n                title: \"I win Scorpion\",\n                main: \"Just look to this punch\",\n                photo: \"https://source.unsplash.com/random\"\n            }\n        ],\n    },\n    {\n        id: 2,\n        userId: 2,\n        posts: [\n            {\n                id: 0,\n                title: \"God!\",\n                main: \"Thunder god\",\n                photo: \"https://source.unsplash.com/random\"\n            },\n            {\n                id: 1,\n                title: \"It's me\",\n                main: \"Just look to the God\",\n                photo: \"https://source.unsplash.com/random\"\n            },\n            {\n                id: 1,\n                title: \"Alarm\",\n                main: \"We need to protect the Earth!\",\n                photo: \"https://source.unsplash.com/random\"\n            }\n        ],\n    },\n    {\n        id: 3,\n        userId: 3,\n        posts: [\n            {\n                id: 0,\n                title: \"Where is Subzero ?\",\n                main: \"I need him now!\",\n                photo: \"https://source.unsplash.com/random\"\n            }\n        ],\n    }\n]\n\n\nexport default function postsReducer(state = initialState, action) {\n    switch (action.type) {\n        case ADD_POST_TO_PROFILE_REQUEST:\n            return { ...state }\n        case ADD_POST_TO_PROFILE_SUCCESS:\n            return { ...state }\n        case ADD_POST_TO_PROFILE_ERROR:\n            return { ...state, error: action.error }\n        case GET_USER_POSTS_REQUEST:\n            return {...state}\n        case GET_USER_POSTS_SUCCESS:\n            return {\n                ...state,\n                posts: action.posts\n            }\n        case GET_USER_POSTS_ERROR:\n            return {\n                ...state,\n                error: action.error\n            }\n        default:\n            return state\n    }\n}\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\postsAction.js",["356"],"import {\r\n    ADD_POST_TO_PROFILE_REQUEST,\r\n    ADD_POST_TO_PROFILE_SUCCESS,\r\n    ADD_POST_TO_PROFILE_ERROR,\r\n    GET_USER_POSTS_REQUEST,\r\n    GET_USER_POSTS_SUCCESS,\r\n    GET_USER_POSTS_ERROR\r\n}\r\n    from './actionTypes'\r\n\r\nimport { postsAPI } from '../../DAL/posts-api'\r\n\r\nexport function requestAddPost() {\r\n    return {\r\n        type: ADD_POST_TO_PROFILE_REQUEST,\r\n    }\r\n}\r\n\r\nexport function receiveAddPost() {\r\n    return {\r\n        type: ADD_POST_TO_PROFILE_SUCCESS,\r\n    }\r\n}\r\n\r\nexport function failedAddPost(error) {\r\n    return {\r\n        type: ADD_POST_TO_PROFILE_ERROR,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport function requestUserPosts() {\r\n    return {\r\n        type: GET_USER_POSTS_REQUEST\r\n    }\r\n}\r\n\r\nexport function receiveUserPosts(posts) {\r\n    return {\r\n        type: GET_USER_POSTS_SUCCESS,\r\n        posts: posts\r\n    }\r\n}\r\n\r\nexport function errorUserPosts(error) {\r\n    return {\r\n        type: GET_USER_POSTS_ERROR,\r\n        error: error\r\n    }\r\n}\r\n\r\n//��������� ������\r\n\r\nexport function getUserPosts(currentUserId) {\r\n    return async (dispatch) => {\r\n        dispatch(requestUserPosts())\r\n\r\n        try {\r\n            let response = await postsAPI.getPosts(currentUserId)\r\n            dispatch(receiveUserPosts(response.data))\r\n        } catch (error)\r\n        {\r\n            dispatch(errorUserPosts(error))\r\n        }\r\n    }\r\n}\r\n\r\nexport function addPost(currentUserId, title, body, authorId, conectionId) {\r\n    return async (dispatch) => {\r\n        dispatch(requestAddPost())\r\n\r\n        try {\r\n            let response = await postsAPI.postPost(currentUserId, title, body, authorId, conectionId)\r\n            dispatch(receiveAddPost())\r\n        } catch (error)\r\n        {\r\n            dispatch(failedAddPost(error))\r\n        }\r\n    }\r\n}\r\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\profilesMock.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\friendsAction.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\friendsReducer.js",["357","358"],"import {\n    GET_FRIENDS_REQUEST,\n    GET_FRIENDS_SUCCESS,\n    GET_FRIENDS_ERROR,\n\n} from '../actions/actionTypes'\n\nconst initialState = {\n    friends: []\n}\n\nlet friendsMock = [\n    {\n        userId:0,\n        friends: [\n            {\n                userId:1\n            },\n            {\n                userId:2\n            },\n            ,\n            {\n                userId:3\n            }\n        ]\n    },\n    {\n        userId: 1,\n        friends: [\n            {\n                userId: 0\n            },\n            {\n                userId: 2\n            }\n        ]\n    },\n    {\n        userId :2,\n        friends: [\n            {\n                userId: 0\n            },\n            {\n                userId: 1\n            }\n        ]\n    },\n    {\n        userId: 3,\n        friends: [\n            {\n                userId: 0\n            }\n        ]\n    }\n]\n\nexport default function friendsReducer(state = initialState, action) {\n    switch (action.type) {\n        case GET_FRIENDS_REQUEST:\n            return {...state}\n        case GET_FRIENDS_SUCCESS:\n            return {\n                ...state,\n                friends: action.friends\n            }\n        case GET_FRIENDS_ERROR:\n            return {\n                ...state,\n                error: action.error\n            }\n        default:\n            return state\n    }\n}\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\informatorReducer.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\FriendsContainer.js",["359","360","361"],"import React, {useEffect} from 'react'  \r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { getLittleInfromationAboutFriend, getUserFriends} from '../Redux/actions/friendsAction'\r\n\r\nimport Friends from '../components/Friends/Friends'\r\nimport { withAuthUser } from '../hoc/withAuthUser'\r\nimport { getFriendsClipInfo, getFriendsId} from '../utiles/selectors/selectors'\r\n\r\nconst FriendsContainer = (props) => {\r\n\r\n    const getUser=()=>{\r\n        return props.match.params.profileId ? props.match.params.profileId : props.loginUserId\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.getUserFriends(getUser());\r\n    }, [getUser()]);\r\n\r\n    const friends = () => {\r\n        return <Friends friends={props.friends} /> \r\n    }\r\n\r\n    const loading = () => {\r\n        return <div>\"loading\"</div>\r\n    }\r\n\r\n    return (\r\n        !props.friends ? loading() : friends()\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        friends: getFriendsId(state),\r\n        /*friends: getFriendsClipInfo(state)*/\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getUserFriends: (userId) => (dispatch(getUserFriends(userId))),\r\n        getLittleInfoAboutFriends: (userId) => (dispatch(getLittleInfromationAboutFriend(userId)))\r\n}}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthUser,\r\n)(FriendsContainer)\r\n ","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Friends\\Friends.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\hoc\\withAuthUser.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\hoc\\withFriends.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\utiles\\ReduxMUIForms\\InputReduxMUI.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\utiles\\ReduxMUIForms\\CheckboxReduxMUI.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Messages\\Chat\\MessageCreator\\MessageForm\\MessageForm.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Profile\\PostsWall\\PostsWall.js",["362"],"import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport PostForm from './PostForm/PostForm';\r\nimport Posts from './Posts/Posts';\r\n\r\nconst useStyles = makeStyles({\r\n    createPost: {\r\n        border: \"outset\"\r\n    },\r\n});\r\n\r\n\r\nconst PostsWall = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <Grid container item>\r\n                <PostForm onSubmit={props.onSubmit} />\r\n            </Grid>\r\n            <Grid container item>\r\n                <Posts posts={props.posts} />\r\n            </Grid>\r\n        </>\r\n        )\r\n}\r\n\r\nexport default PostsWall;\r\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Profile\\PostsWall\\Posts\\Posts.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Profile\\PostsWall\\PostForm\\PostForm.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Profile\\Friends\\Friends.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\ChatContainer.js",["363","364","365"],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\reducers\\loginReducer.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\LoginContainer.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\Redux\\actions\\loginAction.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\utiles\\vaildators\\validators.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\utiles\\selectors\\selectors.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\RouteComponent.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Profile\\Description\\Description.js",["366"],"import React, { useEffect, useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Grid, Typography, Chip, Accordion, AccordionSummary, AccordionDetails, Input } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n    rounded: {\n        width: 300,\n        height:300\n    },\n});\n\nconst Description = ({ name, description, userStatus}) => {\n    const classes = useStyles();\n\n    //TODO: push status on store\n    let [editModeStatus, setEditModeStatus] = useState(false);\n    let [status, setStatus] = useState(userStatus);\n\n    useEffect(() => {\n        setStatus(userStatus);\n    }, [userStatus]);\n\n    const onBlurStatusUpdate = () => {\n        setEditModeStatus(false);\n    }\n\n    const onClickEditStatus = () => {\n        setEditModeStatus(true);\n    }\n\n    const onStatusChange = (e) => {\n        let textStatus = e.currentTarget.value;\n        if (textStatus === \"\")\n        {\n            textStatus = \"*statusa net, eto rasvet, kluch poverni i po-li-te-li*\"\n        }\n        setStatus(textStatus);\n    }\n\n        return (\n            <>\n                <Grid container item>\n                    <Grid container item xs={8}>\n                        <Typography variant=\"h4\">Name:</Typography>\n                        <Typography variant=\"h4\">{name}</Typography>\n                    </Grid>\n                    <Grid container item xs={4}>\n                        <Chip label=\"Online\" color=\"secondary\" />\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid container item md={1} xs={2}>\n                        <Typography variant=\"h6\">Status:</Typography>\n                    </Grid>\n                    <Grid container item md={11} xs={10}>\n                        {!editModeStatus && <Typography variant=\"h6\" onClick={onClickEditStatus}>{status}</Typography>}\n                        {editModeStatus && <Input autoFocus={true} onChange={onStatusChange} value={status} onBlur={onBlurStatusUpdate} />}\n                    </Grid>\n                </Grid>\n                <Grid container item>\n                    social network\n                </Grid>\n                <Grid container item>\n                    <Accordion>\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreIcon />}\n                            aria-controls=\"panel1a-content\"\n                            id=\"panel1a-header\"\n                        >\n                            <Typography >Description</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <Typography>\n                                {description}\n                            </Typography>\n                        </AccordionDetails>\n                    </Accordion>\n                </Grid>\n            </>\n        )\n}\n\nexport default Description;\n","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Profile\\Gallery\\Gallery.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\components\\Profile\\MyRecipes\\MyRecipes.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\DAL\\profile-api.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\DAL\\auth-api.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\DAL\\posts-api.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\DAL\\friends-api.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\PostsContainer.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\containers\\ProfileFriendsContainer.js",["367"],"import React from 'react'  \r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { getLittleInfromationAboutFriend} from '../Redux/actions/friendsAction'\r\n\r\nimport { withAuthUser } from '../hoc/withAuthUser'\r\nimport { getFriendsClipInfo, getFriendsId} from '../utiles/selectors/selectors'\r\nimport Friends from '../components/Profile/Friends/Friends'\r\n\r\nconst ProfileFriendsContainer = (props) =>{\r\n\r\n    const friends = () => {\r\n        return <Friends userId={props.userId} friends={props.friends} /> \r\n    }\r\n\r\n    const loading = () => {\r\n        return <div>\"loading\"</div>\r\n    }\r\n\r\n    return (\r\n        !props.userId ? loading() : friends()\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        friends: getFriendsId(state),\r\n        /*friends: getFriendsClipInfo(state)*/\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getLittleInfoAboutFriends: (userId) => (dispatch(getLittleInfromationAboutFriend(userId)))\r\n}}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthUser,\r\n)(ProfileFriendsContainer)\r\n ","D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\DAL\\messages-api.js",[],"D:\\dev\\BookRecipes\\BookRecipes.WebApi\\client\\src\\DAL\\hub\\chathub.js",["368","369"],"import * as signalR from '@microsoft/signalr'\nconst chathubConnection = new signalR.HubConnectionBuilder()\n    .withUrl(\"/chat\")\n    .configureLogging(signalR.LogLevel.Information)  \n    .build();\n\nconst chathub = {\n    hub() {\n        return chathubConnection ;\r\n    },\n    start() {\n        // Starts the SignalR connection\n        chathubConnection .start();\r\n    },\n    sendConnectionId(){\n        if (chathubConnection.connectionId) {\n            chathubConnection.invoke(\"sendConnectionId\", chathubConnection.connectionId);\n        }\n    },\n    send(data) {\n        if (chathubConnection.connectionId) {\n            chathubConnection.invoke(\"Send\", data);\n        }\r\n    },\n}\n\n/*hubConnection.on(\"Send\", function (data) {\n    debugger\n    console.log(data);\n});*/\n\n/*document.getElementById(\"sendBtn\").addEventListener(\"click\", function (e) {\n    *//*let message = document.getElementById(\"message\").value;*//*\n    hubConnection.invoke(\"Send\", message);\n});*/\n\n//export default chathub;\n/*hubConnection.start();*/\nexport default chathubConnection;\n",{"ruleId":"370","replacedBy":"371"},{"ruleId":"372","replacedBy":"373"},{"ruleId":"374","severity":1,"message":"375","line":2,"column":10,"nodeType":"376","messageId":"377","endLine":2,"endColumn":24},{"ruleId":"374","severity":1,"message":"378","line":2,"column":26,"nodeType":"376","messageId":"377","endLine":2,"endColumn":39},{"ruleId":"374","severity":1,"message":"379","line":2,"column":8,"nodeType":"376","messageId":"377","endLine":2,"endColumn":14},{"ruleId":"374","severity":1,"message":"380","line":4,"column":8,"nodeType":"376","messageId":"377","endLine":4,"endColumn":15},{"ruleId":"381","severity":1,"message":"382","line":33,"column":64,"nodeType":"383","messageId":"384","endLine":33,"endColumn":66},{"ruleId":"374","severity":1,"message":"385","line":7,"column":10,"nodeType":"376","messageId":"377","endLine":7,"endColumn":28},{"ruleId":"374","severity":1,"message":"386","line":7,"column":8,"nodeType":"376","messageId":"377","endLine":7,"endColumn":17},{"ruleId":"374","severity":1,"message":"387","line":27,"column":11,"nodeType":"376","messageId":"377","endLine":27,"endColumn":18},{"ruleId":"374","severity":1,"message":"387","line":68,"column":11,"nodeType":"376","messageId":"377","endLine":68,"endColumn":18},{"ruleId":"374","severity":1,"message":"388","line":69,"column":11,"nodeType":"376","messageId":"377","endLine":69,"endColumn":24},{"ruleId":"389","severity":1,"message":"390","line":1,"column":1,"nodeType":"391","messageId":"392","fix":"393"},{"ruleId":"389","severity":1,"message":"390","line":1,"column":1,"nodeType":"391","messageId":"392","fix":"394"},{"ruleId":"374","severity":1,"message":"385","line":7,"column":10,"nodeType":"376","messageId":"377","endLine":7,"endColumn":28},{"ruleId":"395","severity":1,"message":"396","line":13,"column":8,"nodeType":"397","endLine":13,"endColumn":27,"suggestions":"398"},{"ruleId":"389","severity":1,"message":"390","line":1,"column":1,"nodeType":"391","messageId":"392","fix":"399"},{"ruleId":"389","severity":1,"message":"390","line":1,"column":1,"nodeType":"391","messageId":"392","fix":"400"},{"ruleId":"374","severity":1,"message":"401","line":58,"column":5,"nodeType":"376","messageId":"377","endLine":58,"endColumn":17},{"ruleId":"374","severity":1,"message":"402","line":60,"column":17,"nodeType":"376","messageId":"377","endLine":60,"endColumn":25},{"ruleId":"389","severity":1,"message":"390","line":1,"column":1,"nodeType":"391","messageId":"392","fix":"403"},{"ruleId":"389","severity":1,"message":"390","line":1,"column":1,"nodeType":"391","messageId":"392","fix":"404"},{"ruleId":"374","severity":1,"message":"405","line":1,"column":17,"nodeType":"376","messageId":"377","endLine":1,"endColumn":26},{"ruleId":"389","severity":1,"message":"390","line":1,"column":1,"nodeType":"391","messageId":"392","fix":"406"},{"ruleId":"389","severity":1,"message":"390","line":1,"column":1,"nodeType":"391","messageId":"392","fix":"407"},{"ruleId":"389","severity":1,"message":"390","line":1,"column":1,"nodeType":"391","messageId":"392","fix":"408"},{"ruleId":"374","severity":1,"message":"409","line":9,"column":7,"nodeType":"376","messageId":"377","endLine":9,"endColumn":16},{"ruleId":"389","severity":1,"message":"390","line":1,"column":1,"nodeType":"391","messageId":"392","fix":"410"},{"ruleId":"374","severity":1,"message":"411","line":25,"column":5,"nodeType":"376","messageId":"377","endLine":25,"endColumn":14},{"ruleId":"374","severity":1,"message":"402","line":73,"column":17,"nodeType":"376","messageId":"377","endLine":73,"endColumn":25},{"ruleId":"374","severity":1,"message":"412","line":12,"column":5,"nodeType":"376","messageId":"377","endLine":12,"endColumn":16},{"ruleId":"413","severity":1,"message":"414","line":15,"column":18,"nodeType":"397","messageId":"415","endLine":26,"endColumn":10},{"ruleId":"374","severity":1,"message":"385","line":8,"column":10,"nodeType":"376","messageId":"377","endLine":8,"endColumn":28},{"ruleId":"395","severity":1,"message":"416","line":18,"column":8,"nodeType":"397","endLine":18,"endColumn":19,"suggestions":"417"},{"ruleId":"395","severity":1,"message":"418","line":18,"column":9,"nodeType":"419","endLine":18,"endColumn":18},{"ruleId":"374","severity":1,"message":"387","line":18,"column":11,"nodeType":"376","messageId":"377","endLine":18,"endColumn":18},{"ruleId":"389","severity":1,"message":"390","line":1,"column":1,"nodeType":"391","messageId":"392","fix":"420"},{"ruleId":"395","severity":1,"message":"396","line":14,"column":8,"nodeType":"397","endLine":14,"endColumn":54,"suggestions":"421"},{"ruleId":"395","severity":1,"message":"396","line":22,"column":8,"nodeType":"397","endLine":22,"endColumn":10,"suggestions":"422"},{"ruleId":"374","severity":1,"message":"387","line":22,"column":11,"nodeType":"376","messageId":"377","endLine":22,"endColumn":18},{"ruleId":"374","severity":1,"message":"385","line":7,"column":10,"nodeType":"376","messageId":"377","endLine":7,"endColumn":28},{"ruleId":"374","severity":1,"message":"423","line":7,"column":7,"nodeType":"376","messageId":"377","endLine":7,"endColumn":14},{"ruleId":"424","severity":1,"message":"425","line":13,"column":9,"nodeType":"426","messageId":"427","endLine":13,"endColumn":33,"fix":"428"},"no-native-reassign",["429"],"no-negated-in-lhs",["430"],"no-unused-vars","'selectFromBook' is defined but never used.","Identifier","unusedVar","'fetchFromBook' is defined but never used.","'Header' is defined but never used.","'SideBar' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'getFriendsClipInfo' is defined but never used.","'PostsWall' is defined but never used.","'classes' is assigned a value but never used.","'errorMessages' is assigned a value but never used.","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"431","text":"432"},{"range":"433","text":"432"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["434"],{"range":"435","text":"432"},{"range":"436","text":"432"},"'messagesMock' is assigned a value but never used.","'response' is assigned a value but never used.",{"range":"437","text":"432"},{"range":"438","text":"432"},"'useEffect' is defined but never used.",{"range":"439","text":"432"},{"range":"440","text":"432"},{"range":"441","text":"432"},"'useStyles' is assigned a value but never used.",{"range":"442","text":"432"},"'postsMock' is assigned a value but never used.","'friendsMock' is assigned a value but never used.","no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray","React Hook useEffect has missing dependencies: 'getUser' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["443"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression",{"range":"444","text":"432"},["445"],["446"],"'chathub' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property start.","MemberExpression","unexpectedWhitespace",{"range":"447","text":"448"},"no-global-assign","no-unsafe-negation",[-1,0],"",[-1,0],{"desc":"449","fix":"450"},[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],{"desc":"451","fix":"452"},[-1,0],{"desc":"453","fix":"454"},{"desc":"455","fix":"456"},[351,353],".","Update the dependencies array to be: [props, props.loginUserId]",{"range":"457","text":"458"},"Update the dependencies array to be: [getUser, props]",{"range":"459","text":"460"},"Update the dependencies array to be: [props, props.loginUserId, props.match.params.userId]",{"range":"461","text":"462"},"Update the dependencies array to be: [props]",{"range":"463","text":"464"},[495,514],"[props, props.loginUserId]",[644,655],"[getUser, props]",[558,604],"[props, props.loginUserId, props.match.params.userId]",[829,831],"[props]"]